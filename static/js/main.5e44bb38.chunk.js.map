{"version":3,"sources":["components/layout/AuthLayout.jsx","libs/constant/palette.js","libs/constant/constant.js","reducers/user.js","pages/Login.jsx","pages/Register.jsx","statics/images/LandingLogo3.png","pages/Landing.jsx","components/common/Nav.jsx","components/layout/ContentLayout.jsx","components/history/HistoryHeader.jsx","reducers/post.js","components/history/GuestHistoryDetail.jsx","components/history/HostHistoryDetail.jsx","components/history/HistoryListItem.jsx","pages/History.jsx","components/main/CreateGroup.jsx","components/main/JoinGroup.jsx","components/main/MainHeader.jsx","components/common/MainListItem.jsx","components/common/MainListIndex.jsx","components/common/MainList.jsx","components/main/GroupList.jsx","components/main/WaitingList.jsx","components/main/RecentTrends.jsx","pages/Main.jsx","components/group/Summary.jsx","components/group/MemberList.jsx","components/group/GuestWebcam.jsx","statics/testImages/park1.jpeg","statics/testImages/park2.jpeg","statics/testImages/park3.jpeg","statics/testImages/kim1.jpeg","statics/testImages/kim2.jpeg","statics/testImages/kim3.jpeg","statics/testImages/han1.jpeg","statics/testImages/han2.jpeg","statics/testImages/han3.jpeg","statics/testImages/yang1.jpeg","statics/testImages/yang2.jpeg","statics/testImages/yang3.jpeg","reducers/index.js","libs/api/client.js","libs/api/post.js","sagas/post.js","libs/util/dummyCreator.js","libs/api/user.js","sagas/user.js","sagas/index.js","index.jsx"],"names":["styled","div","props","type","css","palette","CLIENT_URL","BACK_URL","Array","from","length","v","i","SET_USER_REQUEST","SET_USER_SUCCESS","SET_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","REGISTER_REQUEST","setUserRequestAction","createAction","data","user","handleActions","state","action","setUserLoading","setUserDone","setUserFalse","me","loginLoading","loginDone","loginError","error","logoutLoading","logoutDone","logoutError","registerLoading","registerSuccess","registerFailure","LadingWrapper","LandingHeader","LandingSection","LandingImgWrapper","LandingLogoImg","img","Landing","useState","isVisible","setIsVisible","style","marginLeft","Date","getFullYear","marginRight","padding","color","className","onClick","console","log","width","background","border","href","textDecoration","src","LandingLogo","alt","NavWrapper","NavLink","currentMenu","withRouter","history","setCurrentMenu","useEffect","currPath","location","pathname","slice","indexOf","to","fontSize","cursor","localStorage","removeItem","push","Select","Option","INITIALIZE_POST","INITIALIZE_GROUP_AND_WAITING_LIST","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_GROUP_LIST_REQUEST","LOAD_GROUP_LIST_SUCCESS","LOAD_GROUP_LIST_FAILURE","LOAD_WAITING_LIST_REQUEST","LOAD_WAITING_LIST_SUCCESS","LOAD_WAITING_LIST_FAILURE","LOAD_GUEST_RECENT_TRENDS_REQUEST","LOAD_GUEST_RECENT_TRENDS_SUCCESS","LOAD_GUEST_RECENT_TRENDS_FAILURE","LOAD_HOST_RECENT_TRENDS_REQUEST","LOAD_HOST_RECENT_TRENDS_SUCCESS","LOAD_HOST_RECENT_TRENDS_FAILURE","LOAD_HISTORY_LIST_REQEUST","LOAD_HISTORY_LIST_SUCCESS","LOAD_HISTORY_LIST_FAILURE","ALLOW_MEMBER_REQUEST","ALLOW_MEMBER_SUCCESS","ALLOW_MEMBER_FAILURE","REJECT_MEMBER_REQUEST","REJECT_MEMBER_SUCCESS","REJECT_MEMBER_FAILURE","WAITING_TO_GROUP","WAITING_TO_NONE","JOIN_TO_WAITING","LOAD_INTERVAL_GROUPLIST","LOAD_INTERVAL_GROUPLIST_SUCCESS","LOAD_INTERVAL_WAITINGLIST","LOAD_INTERVAL_WAITINGLIST_SUCCESS","LOAD_WAITING_MEMBER","LOAD_WAITING_MEMBER_SUCCESS","post","groupDetail","groupList","waitingList","loadPostLoading","loadPostDone","loadPostError","loadGroupListLoading","loadGroupListDone","loadGroupListError","loadWaitingListLoading","loadWaitingListDone","loadWaitingListError","guestRecentTrends","hostRecentTrends","loadHistoryListLoading","loadHistoryListDone","loadHistoryListError","historyList","groupMemberSimpleDtoList","concat","name","payload","email","userEmail","waitingMemberDtoList","filter","id","groupName","groupId","waitingStatus","res","span","List","Item","idx","index","Link","FormData","append","rootReducer","combineReducers","axios","defaults","baseURL","client","create","loadGroupList","get","loadWaitingList","loadGroupInfo","userId","allowMember","rejectMember","loadHistoryList","loadGuestRecentTrends","loadHostRecentTrends","loadIntervalGroupList","loadIntervalWaitingList","loadWaitingMember","loadPostSaga","loadGroupListSaga","loadWaitingListSaga","loadGuestRecentTrendsSaga","loadHostRecentTrendsSaga","loadHistoryListSaga","allowMemberSaga","rejectMemberSaga","loadIntervalGroupListSaga","loadIntervalWaitingListSaga","loadWaitingMemberSaga","watchPost","call","put","role","attendanceRate","faker","datatype","number","min","max","concentrationRate","drowsinessRate","delay","fill","map","historyId","shortId","generate","lorem","word","createdAt","date","past","attendanceCount","vibe","isAttend","boolean","timeLineLog","startHour","startMinute","startSeconds","endHour","endMinute","endSeconds","roll","left","normal","right","yaw","groupMember","findName","internet","attitude","absenceTime","takeLatest","login","password","setUserSaga","loginSaga","logoutSaga","registerSaga","watchUser","JSON","parse","getItem","setItem","stringify","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","dispatch","loadUser","ReactDOM","render","basename","window","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.5e44bb38.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentWrapper = styled.div`\n  width: 900px;\n  ${(props) =>\n    props.type === \"login\" &&\n    css`\n      width: 600px;\n    `}\n  border-radius: 5px;\n  background-color: #f1f2f5;\n`;\n\nconst AuthLayout = ({ children, type }) => {\n  return (\n    <Container>\n      <ContentWrapper type={type}>{children}</ContentWrapper>\n    </Container>\n  );\n};\n\nexport default AuthLayout;\n","export const palette = {\n  mainBG: \"#aeb0d3\", // 프로젝트 메인 컬러\n  contentBG: \"#f1f2f5\", // 컨텐트 내용 컬러\n};\n","export const CLIENT_URL = \"http://localhost:3000\";\n\nexport const BACK_URL = \"http://localhost:8080\";\n\nexport const WHOLE_MINUTE = Array.from({ length: 100 }, (v, i) => i * 5);\n\nexport const CLASS_DURATION_HOUR = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport const CLASS_DURATION_MINUTE = Array.from({ length: 60 }, (v, i) => i);\n\nexport const ABSENCE_TIME = Array.from({ length: 60 }, (v, i) => i);\n\nexport const ALERT_ATMOSPHERE = Array.from({ length: 60 }, (v, i) => i);\n\nexport const AZURE_FACEAPI = `https://koreacentral.api.cognitive.microsoft.com/face/v1.0/detect?returnFaceId=true&returnFaceLandmarks=true&returnFaceAttributes=headPose&recognitionModel=recognition_03&returnRecognitionModel=true&detectionModel=detection_01&faceIdTimeToLive=86400`;\n\nexport const YEAR = Array.from({ length: 10 }, (v, i) => 2020 + i);\n\nexport const MONTH = Array.from({ length: 12 }, (v, i) => 1 + i);\n\nexport const DAY = Array.from({ length: 31 }, (v, i) => 1 + i);\n","import { createAction, handleActions } from \"redux-actions\";\n\n// initial state\n\nconst initialState = {\n  me: null,\n  loginLoading: false,\n  loginDone: false,\n  loginError: null,\n  logoutLoading: false,\n  logoutDone: false,\n  logoutError: null,\n  registerLoading: false,\n  registerSuccess: false,\n  registerFailure: null,\n};\n\n// action type\n\nexport const SET_USER_REQUEST = \"user/SET_USER_REQUEST\";\nexport const SET_USER_SUCCESS = \"user/SET_USER_SUCCESS\";\nexport const SET_USER_FAILURE = \"user/SET_USER_FAILURE\";\n\nexport const LOG_IN_REQUEST = \"user/LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"user/LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"user/LOG_IN_FAILURE\";\n\nexport const LOG_OUT_REQUEST = \"user/LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"user/LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"user/LOG_OUT_FAILURE\";\n\nexport const REGISTER_REQUEST = \"user/REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"user/REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"user/REGISTER_FAILURE\";\n\n// action creator\n\nexport const setUserRequestAction = createAction(\n  SET_USER_REQUEST,\n  (data) => data,\n);\n\nexport const loginRequestAction = createAction(LOG_IN_REQUEST, (data) => data);\n\nexport const logoutRequestAction = createAction(LOG_OUT_REQUEST);\n\nexport const registerRequestAction = createAction(\n  REGISTER_REQUEST,\n  (data) => data,\n);\n\n// reducer\n\nconst user = handleActions(\n  {\n    [SET_USER_REQUEST]: (state, action) => ({\n      ...state,\n      setUserLoading: true,\n      setUserDone: false,\n      setUserFalse: null,\n    }),\n    [SET_USER_SUCCESS]: (state, action) => ({\n      ...state,\n      setUserLoading: false,\n      setUserDone: true,\n      setUserFalse: null,\n      me: action.me,\n    }),\n    [SET_USER_FAILURE]: (state, action) => ({\n      ...state,\n      setUserLoading: false,\n      setUserDone: false,\n      setUserFalse: null,\n    }),\n    [LOG_IN_REQUEST]: (state, action) => ({\n      ...state,\n      loginLoading: true,\n      loginDone: false,\n      loginError: null,\n    }),\n    [LOG_IN_SUCCESS]: (state, action) => ({\n      ...state,\n      loginLoading: false,\n      loginDone: true,\n      loginError: null,\n      me: action.me,\n    }),\n    [LOG_IN_FAILURE]: (state, action) => ({\n      ...state,\n      loginLoading: false,\n      loginDone: false,\n      loginError: action.error,\n    }),\n    [LOG_OUT_REQUEST]: (state, action) => ({\n      ...state,\n      logoutLoading: true,\n      logoutDone: false,\n      logoutError: null,\n    }),\n    [LOG_OUT_SUCCESS]: (state, action) => ({\n      ...state,\n      logoutLoading: false,\n      logoutDone: true,\n      logoutError: null,\n      me: null,\n    }),\n    [LOG_OUT_FAILURE]: (state, action) => ({\n      ...state,\n      logoutLoading: false,\n      logoutDone: false,\n      logoutError: action.error,\n    }),\n    // -> deprecated\n    [REGISTER_REQUEST]: (state, action) => ({\n      ...state,\n      registerLoading: true,\n      registerSuccess: false,\n      registerFailure: null,\n    }),\n    [REGISTER_SUCCESS]: (state, action) => ({\n      ...state,\n      registerLoading: false,\n      registerSuccess: true,\n      registerFailure: null,\n    }),\n    [REGISTER_FAILURE]: (state, action) => ({\n      ...state,\n      registerLoading: false,\n      registerSuccess: false,\n      registerFailure: null,\n    }),\n  },\n  initialState,\n);\n\nexport default user;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport AuthLayout from \"../components/layout/AuthLayout\";\nimport { Form, Input, Button } from \"antd\";\nimport { palette } from \"../libs/constant/palette\";\nimport { CLIENT_URL } from \"../libs/constant/constant\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { loginRequestAction } from \"../reducers/user\";\nimport useInput from \"../hooks/useInput\";\n\nconst LoginWrapper = styled.div`\n  padding: 50px 50px;\n`;\n\nconst InputLayout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nconst Login = ({ history }) => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n\n  const onLogin = (values) => {\n    dispatch(loginRequestAction({ ...values }));\n  };\n\n  useEffect(() => {\n    if (me) {\n      history.push(\"/main\");\n    }\n  }, [me, history]);\n\n  return (\n    <AuthLayout type=\"login\">\n      <LoginWrapper>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"40px\",\n            fontSize: \"2.5rem\",\n            fontWeight: \"600\",\n          }}\n        >\n          <a href={CLIENT_URL} style={{ color: \"#ccc\" }}>\n            Focus\n          </a>\n        </div>\n        <Form {...InputLayout} name=\"login\" onFinish={onLogin}>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Email!\",\n              },\n            ]}\n          >\n            <Input placeholder=\"Input your email\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password placeholder=\"Input your password\" />\n          </Form.Item>\n          <div style={{ marginTop: \"60px\" }}>\n            <div style={{ textAlign: \"center\" }}>\n              <Button\n                type=\"primary\"\n                style={{\n                  background: palette.mainBG,\n                  border: `1px solid ` + palette.mainBG,\n                  width: \"100px\",\n                }}\n                htmlType=\"submit\"\n              >\n                Login\n              </Button>\n            </div>\n            <div style={{ textAlign: \"center\" }}>\n              <Button type=\"text\">\n                <a\n                  href={`${CLIENT_URL}/register`}\n                  style={{ textDecoration: \"underLine\", color: \"#aaa\" }}\n                >\n                  Register\n                </a>\n              </Button>\n            </div>\n          </div>\n        </Form>\n      </LoginWrapper>\n    </AuthLayout>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport AuthLayout from \"../components/layout/AuthLayout\";\nimport { Form, Input, Button, Upload, Image, Modal } from \"antd\";\nimport { UploadOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { CLIENT_URL, BACK_URL } from \"../libs/constant/constant\";\nimport FormData from \"form-data\";\nimport ExampleProfileImage from \"../statics/images/ExampleProfileImage.jpeg\";\nimport { palette } from \"../libs/constant/palette\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\n\nconst RegisterWrapper = styled.div`\n  padding: 50px 50px;\n  .ant-upload-list-picture-card-container {\n    width: 120px;\n    height: 140px;\n    /* margin-left: 30px; */\n  }\n  .ant-upload-select-picture-card {\n    width: 120px;\n    height: 140px;\n    /* margin-left: 30px; */\n  }\n`;\n\nconst InputLayout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n}\n\nconst Register = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const formData = new FormData();\n\n  const [fileList, setFileList] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState(\"\");\n  const [previewTitle, setPreviewTitle] = useState(\"\");\n\n  const onSubmit = (values) => {\n    formData.append(\"email\", values.email);\n    formData.append(\"name\", values.name);\n    formData.append(\"password\", values.password);\n    formData.append(\"passwordConfirm\", values.passwordConfirm);\n\n    fileList.forEach((file, i) => {\n      formData.append(\"file\" + (i + 1), file.originFileObj);\n    });\n\n    axios\n      .post(`${BACK_URL}/api/auth/register`, formData, {\n        header: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((res) => {\n        history.push(\"/login\");\n        console.log(res);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const onChangeImage = (paramFileList) => {\n    setFileList(paramFileList.fileList);\n  };\n\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{ marginTop: 8, color: \"#ccc\" }}>Upload Image</div>\n    </div>\n  );\n\n  const handlePreview = async (file) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\n    );\n  };\n\n  const handleCancel = () => {\n    setPreviewVisible(false);\n  };\n\n  useEffect(() => {\n    console.log(fileList);\n  }, [fileList]);\n\n  return (\n    <AuthLayout>\n      <RegisterWrapper>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"40px\",\n            fontSize: \"2.5rem\",\n            fontWeight: \"600\",\n          }}\n        >\n          <a href={CLIENT_URL} style={{ color: \"#ccc\" }}>\n            Focus\n          </a>\n        </div>\n        <Form {...InputLayout} onFinish={onSubmit}>\n          <Form.Item\n            name=\"email\"\n            label=\"Email\"\n            rules={[\n              {\n                type: \"email\",\n                message: \"The input is not valid Email!\",\n              },\n              {\n                required: true,\n                message: \"Please input your Email!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            label=\"Password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            name=\"passwordConfirm\"\n            label=\"Confirm Password\"\n            dependencies={[\"password\"]}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: \"Please confirm your password!\",\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(\n                    new Error(\n                      \"The two passwords that you entered do not match!\",\n                    ),\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            name=\"name\"\n            label=\"Name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your name!\",\n                whitespace: true,\n              },\n              {\n                min: 3,\n                message: \"Please enter at least 3 characters!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            name=\"profileImage\"\n            label=\"Profile Image\"\n            valuePropName=\"fileList\"\n            //getValueFromEvent={normFile}\n            // rules={[\n            //   {\n            //     required: true,\n            //   },\n            // ]}\n            // extra=\"longgggggggggggggggggggggggggggggggggg\"\n          >\n            <div style={{ display: \"flex\" }}>\n              <div>\n                <Image\n                  width={120}\n                  src={ExampleProfileImage}\n                  style={{ marginRight: \"20px\" }}\n                />\n                <div\n                  style={{\n                    paddingLeft: \"25px\",\n                    color: \"#bbb\",\n                  }}\n                >\n                  -Example-\n                </div>\n              </div>\n              <div style={{ padding: \"5% 30px\" }}>\n                <div style={{ padding: \"10px 0\" }}>\n                  <span style={{ color: \"red\" }}>*</span> Please upload a\n                  picture of you looking straight ahead.\n                </div>\n                <div>\n                  <span style={{ color: \"red\" }}>*</span> Please upload 3\n                  photos.\n                </div>\n              </div>\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n                marginTop: \"20px\",\n              }}\n            >\n              <Upload\n                name=\"logo1\"\n                beforeUpload={(file) => {\n                  setFileList(file);\n                  return false;\n                }}\n                listType=\"picture-card\"\n                accept=\"image/*\"\n                onPreview={handlePreview}\n                onChange={onChangeImage}\n                style={{\n                  width: \"140px\",\n                  margin: \"0\",\n                }}\n              >\n                {fileList.length >= 3 ? null : uploadButton}\n              </Upload>\n              <Modal\n                visible={previewVisible}\n                title={previewTitle}\n                footer={null}\n                onCancel={handleCancel}\n              >\n                <img\n                  alt=\"example\"\n                  style={{ width: \"100%\" }}\n                  src={previewImage}\n                />\n              </Modal>\n            </div>\n          </Form.Item>\n\n          <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={{\n                width: \"100px\",\n                background: palette.mainBG,\n                border: `1px solid ` + palette.mainBG,\n              }}\n            >\n              Register\n            </Button>\n          </div>\n        </Form>\n      </RegisterWrapper>\n    </AuthLayout>\n  );\n};\n\nexport default Register;\n","export default __webpack_public_path__ + \"static/media/LandingLogo3.18544502.png\";","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Modal } from \"antd\";\nimport LandingLogo from \"../statics/images/LandingLogo3.png\";\nimport { CLIENT_URL } from \"../libs/constant/constant\";\nimport { palette } from \"../libs/constant/palette\";\n\nconst LadingWrapper = styled.div``;\n\nconst LandingHeader = styled.div`\n  height: 5vh;\n  /* border: 1px solid black; */\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #aeb0d3;\n  color: #fff;\n  font-size: 0.7rem;\n`;\n\nconst LandingSection = styled.div`\n  height: 55vh;\n  /* border: 1px solid black; */\n  padding-top: 40px;\n  font-size: 4.5rem;\n  font-weight: 600;\n  letter-spacing: -2px;\n  line-height: 100%;\n  text-align: center;\n  .logo-name {\n    font-size: 7rem;\n    line-height: 90%;\n  }\n  .btn-wrapper {\n    margin-top: 7%;\n    padding: 30px 0;\n  }\n  .login-btn-wrapper,\n  .register-btn-wrapper {\n    line-height: 0;\n  }\n`;\n\nconst LandingImgWrapper = styled.div`\n  height: 40vh;\n  /* border: 1px solid black; */\n  text-align: center;\n`;\n\nconst LandingLogoImg = styled.img`\n  width: 40%;\n  height: auto;\n  /* border: 1px solid blue; */\n`;\n\nconst Landing = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleOk = () => {\n    console.log(11);\n    setIsVisible(!isVisible);\n  };\n\n  return (\n    <LadingWrapper>\n      <LandingHeader>\n        <div style={{ marginLeft: \"10px\" }}>\n          Created by Park Jinho <span>{new Date().getFullYear()} </span>\n        </div>\n        <div style={{ marginRight: \"10px\" }}>\n          &copy; Copyright All Reserved.\n        </div>\n      </LandingHeader>\n      <LandingSection>\n        <div style={{ padding: 0 }}>Fall into a meeting</div>\n        <div style={{ color: \"#ccc\" }} className=\"logo-name\">\n          Focus.\n        </div>\n        <div className=\"btn-wrapper\">\n          <div style={{ color: \"#ccc\" }} className=\"login-btn-wrapper\">\n            <Button\n              type=\"primary\"\n              onClick={handleOk}\n              style={{\n                width: \"170px\",\n                background: palette.mainBG,\n                border: `1px solid ` + palette.mainBG,\n              }}\n            >\n              <a href={`${CLIENT_URL}/login`}>Login</a>\n            </Button>\n          </div>\n          <div style={{ color: \"#ccc\" }} className=\"register-btn-wrapper\">\n            <Button type=\"text\">\n              <a\n                href={`${CLIENT_URL}/register`}\n                style={{ textDecoration: \"underLine\", color: \"#aaa\" }}\n              >\n                Register\n              </a>\n            </Button>\n          </div>\n        </div>\n      </LandingSection>\n      <LandingImgWrapper>\n        <div>\n          <LandingLogoImg src={LandingLogo} alt=\"logo\" />\n        </div>\n      </LandingImgWrapper>\n    </LadingWrapper>\n  );\n};\n\nexport default Landing;\n","import React, { useState, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst NavWrapper = styled.div`\n  width: 200px;\n  height: 100%;\n  position: fixed;\n  background: #aeb0d3;\n  padding-top: 3%;\n  a {\n    color: #fff;\n    font-size: 1.25rem;\n  }\n`;\n\nconst NavLink = styled.div`\n  padding: 12px 30px;\n  ${(props) =>\n    props.currentMenu &&\n    css`\n      background: #f7f5fa;\n      a {\n        color: #aeb0d3;\n      }\n    `}\n`;\n\nconst Nav = ({ history }) => {\n  const [currentMenu, setCurrentMenu] = useState(\"Home\");\n\n  const onLogout = () => {\n    localStorage.removeItem(\"user\");\n    history.push(\"/\");\n  };\n\n  useEffect(() => {\n    let currPath = history.location.pathname.slice(1);\n    if (currPath.indexOf(\"/\") !== -1) {\n      currPath = currPath.slice(0, currPath.indexOf(\"/\"));\n    }\n    //console.log(currPath);\n    setCurrentMenu(currPath);\n  }, [history]);\n\n  return (\n    <NavWrapper>\n      <NavLink currentMenu={currentMenu === \"main\" && true}>\n        <Link to=\"/main\">Home</Link>\n      </NavLink>\n      <NavLink currentMenu={currentMenu === \"history\" && true}>\n        <Link to=\"/history\">History</Link>\n      </NavLink>\n      <NavLink currentMenu={currentMenu === \"mypage\" && true}>\n        <Link to=\"/mypage\">Mypage</Link>\n      </NavLink>\n      <NavLink>\n        <div\n          style={{ fontSize: \"1.25rem\", color: \"#fff\", cursor: \"pointer\" }}\n          onClick={onLogout}\n        >\n          Logout\n        </div>\n      </NavLink>\n    </NavWrapper>\n  );\n};\n\nexport default withRouter(Nav);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Nav from \"../common/Nav\";\n\nconst ContentWrapper = styled.div`\n  /* border: 1px solid blue; */\n  margin-left: 200px;\n  padding: 30px 80px;\n`;\n\nconst ContentLayout = ({ children }) => {\n  return (\n    <>\n      <Nav></Nav>\n      <ContentWrapper>{children}</ContentWrapper>\n    </>\n  );\n};\n\nexport default ContentLayout;\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport styled from \"styled-components\";\nimport { YEAR, MONTH, DAY } from \"../../libs/constant/constant\";\n\nconst { Option } = Select;\n\nconst HistoryHeaderWrapper = styled.div`\n  margin: 20px 0;\n  .select {\n    width: 120px;\n    margin-right: 10px;\n  }\n`;\n\nconst HistoryHeader = () => {\n  const onChangeSelect = () => {};\n\n  return (\n    <HistoryHeaderWrapper>\n      <Select\n        className=\"select\"\n        placeholder=\"Group Name\"\n        onChange={onChangeSelect}\n      >\n        <Option value=\"jack\">Jack</Option>\n        <Option value=\"lucy\">Lucy</Option>\n        <Option value=\"Yiminghe\">yiminghe</Option>\n      </Select>\n      <Select className=\"select\" placeholder=\"Year\">\n        {YEAR.map((v, i) => (\n          <Option key={i} value={`v`}>\n            {v}\n          </Option>\n        ))}\n      </Select>\n      <Select className=\"select\" placeholder=\"Month\">\n        {MONTH.map((v, i) => (\n          <Option key={i} value={`v`}>\n            {v}\n          </Option>\n        ))}\n      </Select>\n      <Select className=\"select\" placeholder=\"Day\">\n        {DAY.map((v, i) => (\n          <Option key={i} value={`v`}>\n            {v}\n          </Option>\n        ))}\n      </Select>\n      <Select className=\"select\" placeholder=\"Role\">\n        <Option value=\"host\">Host</Option>\n        <Option value=\"guest\">Guest</Option>\n      </Select>\n    </HistoryHeaderWrapper>\n  );\n};\n\nexport default HistoryHeader;\n","import { createAction, handleActions } from \"redux-actions\";\n\n// initial state\n\nconst initialState = {\n  groupDetail: null,\n  groupList: null,\n  waitingList: null,\n  guestRecentTrends: null,\n  hostRecentTrends: null,\n  historyList: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadGroupListLoading: false,\n  loadGroupListDone: false,\n  loadGroupListError: null,\n  loadWaitingListLoading: false,\n  loadWaitingListDone: false,\n  loadWaitingListError: null,\n  loadHistoryListLoading: false,\n  loadHistoryListDone: false,\n  loadHistoryListError: null,\n};\n\n// action type\n\nexport const INITIALIZE_POST = \"post/INITIALIZE_POST\";\n\nexport const INITIALIZE_GROUP_AND_WAITING_LIST =\n  \"post/INITIALIZE_GROUP_AND_WAITING_LIST\";\n\nexport const LOAD_POST_REQUEST = \"post/LOAD_POST_REQUEST\";\nexport const LOAD_POST_SUCCESS = \"post/LOAD_POST_SUCCESS\";\nexport const LOAD_POST_FAILURE = \"post/LOAD_POST_FAILURE\";\n\nexport const LOAD_GROUP_LIST_REQUEST = \"post/LOAD_GROUP_LIST_REQUEST\";\nexport const LOAD_GROUP_LIST_SUCCESS = \"post/LOAD_GROUP_LIST_SUCCESS\";\nexport const LOAD_GROUP_LIST_FAILURE = \"post/LOAD_GROUP_LIST_FAILURE\";\n\nexport const LOAD_WAITING_LIST_REQUEST = \"post/LOAD_WAITING_LIST_REQUEST\";\nexport const LOAD_WAITING_LIST_SUCCESS = \"post/LOAD_WAITING_LIST_SUCCESS\";\nexport const LOAD_WAITING_LIST_FAILURE = \"post/LOAD_WAITING_LIST_FAILURE\";\n\nexport const LOAD_GUEST_RECENT_TRENDS_REQUEST =\n  \"post/LOAD_GUEST_RECENT_TRENDS_REQUEST\";\nexport const LOAD_GUEST_RECENT_TRENDS_SUCCESS =\n  \"post/LOAD_GUEST_RECENT_TRENDS_SUCCESS\";\nexport const LOAD_GUEST_RECENT_TRENDS_FAILURE =\n  \"post/LOAD_GUEST_RECENT_TRENDS_FAILURE\";\n\nexport const LOAD_HOST_RECENT_TRENDS_REQUEST =\n  \"post/LOAD_HOST_RECENT_TRENDS_REQUEST\";\nexport const LOAD_HOST_RECENT_TRENDS_SUCCESS =\n  \"post/LOAD_HOST_RECENT_TRENDS_SUCCESS\";\nexport const LOAD_HOST_RECENT_TRENDS_FAILURE =\n  \"post/LOAD_HOST_RECENT_TRENDS_FAILURE\";\n\nexport const LOAD_HISTORY_LIST_REQEUST = \"post/LOAD_HISTORY_LIST_REQEUST\";\nexport const LOAD_HISTORY_LIST_SUCCESS = \"post/LOAD_HISTORY_LIST_SUCCESS\";\nexport const LOAD_HISTORY_LIST_FAILURE = \"post/LOAD_HISTORY_LIST_FAILURE\";\n\nexport const ALLOW_MEMBER_REQUEST = \"post/ALLOW_MEMBER_REQUEST\";\nexport const ALLOW_MEMBER_SUCCESS = \"post/ALLOW_MEMBER_SUCCESS\";\nexport const ALLOW_MEMBER_FAILURE = \"post/ALLOW_MEMBER_FAILURE\";\n\nexport const REJECT_MEMBER_REQUEST = \"post/REJECT_MEMBER_REQUEST\";\nexport const REJECT_MEMBER_SUCCESS = \"post/REJECT_MEMBER_SUCCESS\";\nexport const REJECT_MEMBER_FAILURE = \"post/REJECT_MEMBER_FAILURE\";\n\nexport const EXIT_GROUP_REQUEST = \"post/EXIT_GROUP_REQUEST\";\nexport const EXIT_GROUP_SUCCESS = \"post/EXIT_GROUP_SUCCESS\";\nexport const EXIT_GROUP_FAILURE = \"post/EXIT_GROUP_FAILURE\";\n\nexport const WAITING_TO_GROUP = \"post/WAITING_TO_GROUP\";\n\nexport const WAITING_TO_NONE = \"post/WAITING_TO_NONE\";\n\nexport const JOIN_TO_WAITING = \"post/JOIN_TO_WAITING\";\n\nexport const LOAD_INTERVAL_GROUPLIST = \"post/LOAD_INTERVAL_GROUPLIST\";\nexport const LOAD_INTERVAL_GROUPLIST_SUCCESS =\n  \"post/LOAD_INTERVAL_GROUPLIST_SUCCESS\";\n\nexport const LOAD_INTERVAL_WAITINGLIST = \"post/LOAD_INTERVAL_WAITINGLIST\";\nexport const LOAD_INTERVAL_WAITINGLIST_SUCCESS =\n  \"post/LOAD_INTERVAL_WAITINGLIST_SUCCESS\";\n\nexport const LOAD_WAITING_MEMBER = \"post/LOAD_WAITING_MEMBER\";\nexport const LOAD_WAITING_MEMBER_SUCCESS = \"post/LOAD_WAITING_MEMBER_SUCCESS\";\n\n// action creator\n\nexport const initializePostAction = createAction(INITIALIZE_POST);\n\nexport const initializeGroupAndWaitingList = createAction(\n  INITIALIZE_GROUP_AND_WAITING_LIST,\n);\n\nexport const loadPostAction = createAction(LOAD_POST_REQUEST, (data) => data);\n\nexport const loadGroupListRequestAction = createAction(\n  LOAD_GROUP_LIST_REQUEST,\n  (data) => data,\n);\n\nexport const loadWaitingListRequestAction = createAction(\n  LOAD_WAITING_LIST_REQUEST,\n  (data) => data,\n);\n\nexport const loadGuestRecentTrendsRequestAction = createAction(\n  LOAD_GUEST_RECENT_TRENDS_REQUEST,\n);\n\nexport const loadHostRecentTrendsRequestAction = createAction(\n  LOAD_HOST_RECENT_TRENDS_REQUEST,\n);\n\nexport const loadHistoryListRequestAction = createAction(\n  LOAD_HISTORY_LIST_REQEUST,\n);\n\nexport const allowMemberRequestAction = createAction(\n  ALLOW_MEMBER_REQUEST,\n  (data) => data,\n);\n\nexport const rejectMemberRequestAction = createAction(\n  REJECT_MEMBER_REQUEST,\n  (data) => data,\n);\n\nexport const exitGroup = createAction(EXIT_GROUP_REQUEST, (data) => data);\n\nexport const waitingToGroup = createAction(WAITING_TO_GROUP, (data) => data);\n\nexport const waitingToNone = createAction(WAITING_TO_NONE, (data) => data);\n\nexport const joinToWaiting = createAction(JOIN_TO_WAITING, (data) => data);\n\nexport const loadIntervalGroupList = createAction(\n  LOAD_INTERVAL_GROUPLIST,\n  (data) => data,\n);\n\nexport const loadIntervalWaitingList = createAction(\n  LOAD_INTERVAL_WAITINGLIST,\n  (data) => data,\n);\n\nexport const loadWaitingMember = createAction(\n  LOAD_WAITING_MEMBER,\n  (data) => data,\n);\n\n// reducer\n\nconst post = handleActions(\n  {\n    [INITIALIZE_POST]: (state, action) => ({\n      ...state,\n      groupDetail: null,\n    }),\n    [INITIALIZE_GROUP_AND_WAITING_LIST]: (state, action) => ({\n      ...state,\n      groupList: null,\n      waitingList: null,\n    }),\n    [LOAD_POST_REQUEST]: (state, action) => ({\n      ...state,\n      loadPostLoading: true,\n      loadPostDone: false,\n      loadPostError: null,\n    }),\n    [LOAD_POST_SUCCESS]: (state, action) => ({\n      ...state,\n      loadPostLoading: false,\n      loadPostDone: true,\n      loadPostError: null,\n      groupDetail: action.groupDetail,\n    }),\n    [LOAD_POST_FAILURE]: (state, action) => ({\n      ...state,\n      loadPostLoading: false,\n      loadPostDone: false,\n      loadPostError: null,\n    }),\n    [LOAD_GROUP_LIST_REQUEST]: (state, action) => ({\n      ...state,\n      loadGroupListLoading: true,\n      loadGroupListDone: false,\n      loadGroupListError: null,\n    }),\n    [LOAD_GROUP_LIST_SUCCESS]: (state, action) => ({\n      ...state,\n      loadGroupListLoading: false,\n      loadGroupListDone: true,\n      loadGroupListError: null,\n      groupList: action.groupList,\n    }),\n    [LOAD_GROUP_LIST_FAILURE]: (state, action) => ({\n      ...state,\n      loadGroupListLoading: false,\n      loadGroupListDone: false,\n      loadGroupListError: null,\n    }),\n    [LOAD_WAITING_LIST_REQUEST]: (state, action) => ({\n      ...state,\n      loadWaitingListLoading: true,\n      loadWaitingListDone: false,\n      loadWaitingListError: null,\n    }),\n    [LOAD_WAITING_LIST_SUCCESS]: (state, action) => ({\n      ...state,\n      loadWaitingListLoading: false,\n      loadWaitingListDone: true,\n      loadWaitingListError: null,\n      waitingList: action.waitingList,\n    }),\n    [LOAD_WAITING_LIST_FAILURE]: (state, action) => ({\n      ...state,\n      loadWaitingListLoading: false,\n      loadWaitingListDone: false,\n      loadWaitingListError: null,\n    }),\n    [LOAD_GUEST_RECENT_TRENDS_REQUEST]: (state, action) => ({\n      ...state,\n    }),\n    [LOAD_GUEST_RECENT_TRENDS_SUCCESS]: (state, action) => ({\n      ...state,\n      guestRecentTrends: action.guestRecentTrends,\n    }),\n    [LOAD_GUEST_RECENT_TRENDS_FAILURE]: (state, action) => ({\n      ...state,\n    }),\n    [LOAD_HOST_RECENT_TRENDS_REQUEST]: (state, action) => ({\n      ...state,\n    }),\n    [LOAD_HOST_RECENT_TRENDS_SUCCESS]: (state, action) => ({\n      ...state,\n      hostRecentTrends: action.hostRecentTrends,\n    }),\n    [LOAD_HOST_RECENT_TRENDS_FAILURE]: (state, action) => ({\n      ...state,\n    }),\n    [LOAD_HISTORY_LIST_REQEUST]: (state, action) => ({\n      ...state,\n      loadHistoryListLoading: true,\n      loadHistoryListDone: false,\n      loadHistoryListError: null,\n    }),\n    [LOAD_HISTORY_LIST_SUCCESS]: (state, action) => ({\n      ...state,\n      loadHistoryListLoading: false,\n      loadHistoryListDone: true,\n      loadHistoryListError: null,\n      historyList: action.historyList,\n    }),\n    [LOAD_HISTORY_LIST_FAILURE]: (state, action) => ({\n      ...state,\n      loadHistoryListLoading: false,\n      loadHistoryListDone: false,\n      loadHistoryListError: null,\n    }),\n    [ALLOW_MEMBER_REQUEST]: (state, action) => ({\n      ...state,\n    }),\n    [ALLOW_MEMBER_SUCCESS]: (state, action) => ({\n      ...state,\n      // groupDetail: {\n      //   ...state.groupDetail,\n      //   data: {\n      //     ...state.groupDetail.data,\n      //     groupMemberSimpleDtoList:\n      //       action.groupDetail.data.groupMemberSimpleDtoList,\n      //   },\n      // },\n    }),\n    [ALLOW_MEMBER_FAILURE]: (state, action) => ({\n      ...state,\n    }),\n    [REJECT_MEMBER_REQUEST]: (state, action) => ({\n      ...state,\n    }),\n    [REJECT_MEMBER_SUCCESS]: (state, action) => ({\n      ...state,\n      // groupDetail: {\n      //   ...state.groupDetail,\n      //   data: {\n      //     ...state.groupDetail.data,\n      //     waitingMemberDtoList: action.groupDetail.data.waitingMemberDtoList,\n      //   },\n      // },\n    }),\n    [REJECT_MEMBER_FAILURE]: (state, action) => ({\n      ...state,\n    }),\n    [WAITING_TO_GROUP]: (state, action) => {\n      console.log(action);\n      return {\n        ...state,\n        groupDetail: {\n          ...state.groupDetail,\n          data: {\n            ...state.groupDetail.data,\n            groupMemberSimpleDtoList: [\n              ...state.groupDetail.data.groupMemberSimpleDtoList,\n            ].concat({\n              name: action.payload.name,\n              email: action.payload.userEmail,\n            }),\n          },\n        },\n      };\n    },\n    [WAITING_TO_NONE]: (state, action) => ({\n      ...state,\n      groupDetail: {\n        ...state.groupDetail,\n        data: {\n          ...state.groupDetail.data,\n          waitingMemberDtoList: [\n            ...state.groupDetail.data.waitingMemberDtoList,\n          ].filter((v, i) => {\n            if (v.email !== action.payload.userEmail) {\n              return { ...v };\n            }\n          }),\n        },\n      },\n    }),\n    [JOIN_TO_WAITING]: (state, action) => ({\n      ...state,\n      waitingList: {\n        ...state.waitingList,\n        data: [...state.waitingList.data].concat({\n          id: 1,\n          groupName: action.payload.groupName,\n          groupId: 1,\n          waitingStatus: \"WAIT\",\n        }),\n      },\n    }),\n    [LOAD_INTERVAL_GROUPLIST_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n        groupList: {\n          ...state.groupList,\n          data: action.res,\n        },\n      };\n    },\n    [LOAD_INTERVAL_WAITINGLIST_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n        waitingList: {\n          ...state.waitingList,\n          data: action.res,\n        },\n      };\n    },\n    [LOAD_WAITING_MEMBER_SUCCESS]: (state, action) => ({\n      ...state,\n      groupDetail: {\n        ...state.groupDetail,\n        data: {\n          ...state.groupDetail.data,\n          waitingMemberDtoList: action.res,\n        },\n      },\n    }),\n  },\n  initialState,\n);\n\nexport default post;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Divider } from \"antd\";\nimport { ResponsiveBar } from \"@nivo/bar\";\n\nconst GuestHistoryDetailWrapper = styled.div`\n  .top,\n  .bottom {\n    display: flex;\n  }\n  .item {\n    flex: 1;\n    /* border: 1px solid violet; */\n    .divider {\n      height: 50px;\n    }\n    .item-desc {\n      height: 200px;\n      /* border: 1px solid red; */\n      text-align: center;\n    }\n  }\n  .attendance {\n    /* line-height: 250px; */\n  }\n`;\n\nconst IsAttendanceWrapper = styled.span`\n  ${(props) =>\n    props.type === \"pass\"\n      ? css`\n          color: blue;\n        `\n      : css`\n          color: red;\n        `}\n  font-size:4rem;\n`;\n\nconst GuestHistoryDetail = ({ data }) => {\n  const [pitchData, setRollData] = useState(null);\n  const [yawData, setYawData] = useState(null);\n\n  useEffect(() => {\n    let tmpPitch = [];\n    // Object.entries(data.roll).forEach((v, i) => {\n    //   tmpPitch.push({ roll: v[0], val: v[1] });\n    // });\n    tmpPitch.push({ roll: \"Pitch Up\", val: data.pitch.pitchUp });\n    tmpPitch.push({\n      roll: \"Pitch Normal\",\n      val: data.pitch.pitchNormal,\n    });\n    tmpPitch.push({ roll: \"Pitch Down\", val: data.pitch.pitchDown });\n\n    setRollData(tmpPitch);\n\n    let tmpYaw = [];\n    // Object.entries(data.yaw).forEach((v, i) => {\n    //   tmpYaw.push({ roll: v[0], val: v[1] });\n    // });\n    tmpYaw.push({ roll: \"Yaw Left\", val: data.yaw.yawLeft });\n    tmpYaw.push({ roll: \"Yaw Normal\", val: data.yaw.yawNormal });\n    tmpYaw.push({ roll: \"Yaw Right\", val: data.yaw.yawRight });\n    setYawData(tmpYaw);\n  }, [data]);\n\n  return (\n    <GuestHistoryDetailWrapper>\n      <div className=\"top\">\n        <div className=\"item attendance\">\n          <div className=\"divider\">\n            <Divider orientation=\"left\">Attendance</Divider>\n          </div>\n          <div\n            className=\"item-desc\"\n            style={{\n              height: \"100%\",\n              lineHeight: \"200px\",\n            }}\n          >\n            {data.attend ? (\n              <IsAttendanceWrapper type=\"pass\">PASS</IsAttendanceWrapper>\n            ) : (\n              <IsAttendanceWrapper type=\"fail\">FAIL</IsAttendanceWrapper>\n            )}\n          </div>\n        </div>\n        <div className=\"item time-line\">\n          <div className=\"divider\">\n            <Divider orientation=\"left\">Timeline Log</Divider>\n          </div>\n          <div\n            className=\"item-desc\"\n            style={{\n              overflow: \"auto\",\n              border: \"1px solid #ddd\",\n            }}\n          >\n            <table width=\"100%\">\n              <tbody>\n                <tr style={{ borderBottom: \"1px solid #ddd\" }}>\n                  <th className=\"th\">State</th>\n                  <th className=\"th\">Time Log</th>\n                </tr>\n                {data.timeLineLog &&\n                  data.timeLineLog.map((v, i) => (\n                    <tr key={i}>\n                      <td>{v.state}</td>\n                      <td>\n                        {`${\n                          v.startHour < 10 ? \"0\" + v.startHour : v.startHour\n                        }:${\n                          v.startMinute < 10\n                            ? \"0\" + v.startMinute\n                            : v.startMinute\n                        }:${\n                          v.startSeconds < 10\n                            ? \"0\" + v.startSeconds\n                            : v.startSeconds\n                        }`}{\" \"}\n                        -{\" \"}\n                        {`${v.endHour < 10 ? \"0\" + v.endHour : v.endHour}:${\n                          v.endMinute < 10 ? \"0\" + v.endMinute : v.endMinute\n                        }:${\n                          v.endSeconds < 10 ? \"0\" + v.endSeconds : v.endSeconds\n                        }`}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div className=\"bottom\">\n        <div className=\"item roll graph\">\n          <div className=\"divider\">\n            <Divider orientation=\"left\">Pitch Graph</Divider>\n          </div>\n          <div className=\"item-desc\">\n            <ResponsiveBar\n              style={{ border: \"1px solid blue\" }}\n              data={pitchData && pitchData}\n              keys={[\"val\"]}\n              indexBy=\"roll\"\n              margin={{ top: 30, right: 30, bottom: 30, left: 30 }}\n              padding={0.45}\n              valueScale={{ type: \"linear\" }}\n              indexScale={{ type: \"band\", round: true }}\n              colors={{ scheme: \"paired\" }}\n              defs={[\n                {\n                  id: \"dots\",\n                  type: \"patternDots\",\n                  background: \"inherit\",\n                  color: \"#38bcb2\",\n                  size: 4,\n                  padding: 1,\n                  stagger: true,\n                },\n                {\n                  id: \"lines\",\n                  type: \"patternLines\",\n                  background: \"inherit\",\n                  color: \"#eed312\",\n                  rotation: -45,\n                  lineWidth: 6,\n                  spacing: 10,\n                },\n              ]}\n              borderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n              axisTop={null}\n              axisRight={null}\n              labelSkipWidth={0}\n              labelSkipHeight={0}\n              labelTextColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n              animate={true}\n              motionStiffness={90}\n              motionDamping={15}\n              isInteractive={true}\n            />\n          </div>\n        </div>\n        <div className=\"item yaw graph\">\n          <div className=\"divider\">\n            <Divider orientation=\"left\">Yaw Graph</Divider>\n          </div>\n          <div className=\"item-desc\">\n            <ResponsiveBar\n              style={{ border: \"1px solid blue\" }}\n              data={yawData && yawData}\n              keys={[\"val\"]}\n              indexBy=\"roll\"\n              margin={{ top: 30, right: 30, bottom: 30, left: 30 }}\n              padding={0.45}\n              valueScale={{ type: \"linear\" }}\n              indexScale={{ type: \"band\", round: true }}\n              colors={{ scheme: \"pastel1\" }}\n              defs={[\n                {\n                  id: \"dots\",\n                  type: \"patternDots\",\n                  background: \"inherit\",\n                  color: \"#38bcb2\",\n                  size: 4,\n                  padding: 1,\n                  stagger: true,\n                },\n                {\n                  id: \"lines\",\n                  type: \"patternLines\",\n                  background: \"inherit\",\n                  color: \"#eed312\",\n                  rotation: -45,\n                  lineWidth: 6,\n                  spacing: 10,\n                },\n              ]}\n              borderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n              axisTop={null}\n              axisRight={null}\n              labelSkipWidth={0}\n              labelSkipHeight={0}\n              labelTextColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n              animate={true}\n              motionStiffness={90}\n              motionDamping={15}\n              isInteractive={true}\n            />\n          </div>\n        </div>\n      </div>\n    </GuestHistoryDetailWrapper>\n  );\n};\n\nexport default GuestHistoryDetail;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Table } from \"antd\";\n\nconst HostHistoryDetailWrapper = styled.div``;\n\nconst TableWrapper = styled.div`\n  border: 1px solid red;\n`;\n\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    width: 150,\n  },\n  {\n    title: \"Email\",\n    dataIndex: \"email\",\n    width: 150,\n    render: (text) => <span style={{ color: \"#888\" }}>{text}</span>,\n  },\n  {\n    title: \"Attitude\",\n    dataIndex: \"attitude\",\n    width: 150,\n    render: (text) => <span style={{ color: \"#888\" }}>{text}</span>,\n  },\n  {\n    title: \"Absence Time\",\n    dataIndex: \"absenceTime\",\n    width: 150,\n    render: (text) => <span style={{ color: \"#888\" }}>{text}</span>,\n  },\n  {\n    title: \"Attendance\",\n    dataIndex: \"attendace\",\n    width: 150,\n    render: (text) =>\n      text === \"FAIL\" ? (\n        <span style={{ color: \"red\" }}>{text}</span>\n      ) : (\n        <span style={{ color: \"blue\" }}>{text}</span>\n      ),\n  },\n];\n\nconst HostHistoryDetail = ({ data }) => {\n  const [newData, setNewData] = useState(\n    data.historyGroupMemberDtoList.map((v, i) => ({\n      key: i,\n      name: v.name,\n      email: v.email,\n      attitude:\n        v.attitude === 1 ? \"Bad\" : v.attitude === 2 ? \"Average\" : \"Good\",\n      absenceTime: v.absenceTime + \" minutes\",\n      attendace: v.attend ? \"PASS\" : \"FAIL\",\n    })),\n  );\n\n  return (\n    <HostHistoryDetailWrapper>\n      <TableWrapper>\n        <Table\n          columns={columns}\n          dataSource={newData}\n          scroll={{ y: 450 }}\n          pagination={false}\n        />\n      </TableWrapper>\n    </HostHistoryDetailWrapper>\n  );\n};\n\nexport default HostHistoryDetail;\n","import React, { useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { List, Avatar, Space, Tag, Popover, Image } from \"antd\";\nimport useToggle from \"../../hooks/useToggle\";\nimport Modal from \"../common/Modal\";\nimport GuestHistoryDetail from \"./GuestHistoryDetail\";\nimport HostHistoryDetail from \"./HostHistoryDetail\";\n\nconst HistoryListItemWrapper = styled(List.Item)`\n  ${(props) =>\n    props.idx % 2 === 0\n      ? css`\n          background: #f0f2f6;\n        `\n      : css`\n          background: #f4f2f6;\n        `}\n\n  padding: 18px 30px;\n  margin-bottom: 10px;\n  transition: 0.3s;\n  display: flex;\n  cursor: pointer;\n\n  .ant-list-item-action {\n    margin-top: 5px;\n    margin-left: 0;\n  }\n  .ant-list-item-meta-title {\n    font-size: 18px;\n  }\n  &:hover {\n    box-shadow: 0 3px 7px rgba(0, 0, 0, 0.21);\n    transition: 0.3s;\n  }\n\n  .list-title,\n  .list-col {\n    flex: 1;\n  }\n  .list-title {\n    font-size: 1.2rem;\n  }\n  .list-col {\n    text-align: center;\n  }\n  .list-data {\n    margin-top: 5px;\n  }\n  .list-index {\n    text-align: center;\n    .ant-tag {\n      text-align: center;\n      margin: 0 auto;\n    }\n  }\n`;\n\nconst HistoryListItem = ({ item, idx }) => {\n  const [modalVisible, setModalVisible, handleModalVisible] = useToggle(false);\n\n  const onClickItem = () => {\n    setModalVisible(!modalVisible);\n  };\n\n  // useEffect(() => {\n  //   console.log(modalVisible, idx);\n  // }, [modalVisible, idx]);\n\n  return (\n    <>\n      <HistoryListItemWrapper idx={idx} onClick={onClickItem}>\n        <div className=\"list-title\">{item.groupName}</div>\n        <div className=\"list-col\">\n          <span className=\"list-index\">\n            <Tag color=\"magenta\">Created At</Tag>\n          </span>\n          <div className=\"list-data\">{`${item.createdYear}.${item.createdMonth}.${item.createdDay}`}</div>\n        </div>\n        <div className=\"list-col\">\n          <span className=\"list-index\">\n            <Tag color=\"green\">Attendance</Tag>\n          </span>\n          <div className=\"list-data\">{`${item.attendanceCount}/100`}</div>\n        </div>\n        <div className=\"list-col\">\n          <span className=\"list-index\">\n            <Tag color=\"orange\">Vibe</Tag>\n          </span>\n          <div className=\"list-data\">\n            {item.vibe >= 0 && item.vibe < 2\n              ? \"😞\"\n              : item.vibe >= 2 && item.vibe < 3\n              ? \"😐\"\n              : \"😭\"}\n          </div>\n        </div>\n        <div className=\"list-col\">\n          <span className=\"list-index\">\n            <Tag color=\"blue\">Role</Tag>\n          </span>\n          <div className=\"list-data\">{item.role}</div>\n        </div>\n      </HistoryListItemWrapper>\n      {item.role === \"GUEST\" ? (\n        <Modal\n          title=\"History Detail - Guest\"\n          isModalVisible={modalVisible}\n          setIsModalVisible={setModalVisible}\n          footer={false}\n          width={900}\n        >\n          <GuestHistoryDetail data={item} />\n        </Modal>\n      ) : (\n        <Modal\n          title=\"History Detail - Host\"\n          isModalVisible={modalVisible}\n          setIsModalVisible={setModalVisible}\n          footer={false}\n          width={900}\n        >\n          <HostHistoryDetail data={item} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default HistoryListItem;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ContentLayout from \"../components/layout/ContentLayout\";\nimport HistoryHeader from \"../components/history/HistoryHeader\";\nimport { Pagination } from \"antd\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { loadHistoryListRequestAction } from \"../reducers/post\";\nimport HistoryList from \"../components/history/HistoryList\";\n\nconst HistoryWrapper = styled.div``;\n\nconst PaginationWrapper = styled.div`\n  text-align: center;\n  margin-top: 50px;\n  .ant-pagination {\n    .ant-pagination-item {\n      &:hover {\n        border: 1px solid #aeb0d3;\n      }\n      a {\n        font-weight: 600;\n        color: #aeb0d3;\n      }\n    }\n    .ant-pagination-item-active {\n      border-color: #aeb0d3;\n      background-color: #aeb0d3;\n\n      a {\n        color: #fff;\n      }\n    }\n    .ant-pagination-item-link {\n      &:hover {\n        border-color: #aeb0d3;\n        color: #aeb0d3;\n      }\n    }\n  }\n`;\n\nconst History = () => {\n  const dispatch = useDispatch();\n  const { historyList } = useSelector((state) => state.post);\n  const { me } = useSelector((state) => state.user);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentData, setCurrentData] = useState(historyList);\n\n  const onChangePage = (page) => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    if (me) {\n      dispatch(loadHistoryListRequestAction(me.data.userId));\n    }\n  }, [me]);\n\n  useEffect(() => {\n    if (historyList) {\n      let newData = historyList.slice(\n        (currentPage - 1) * 5,\n        (currentPage - 1) * 5 + 5,\n      );\n      setCurrentData(newData);\n    }\n  }, [currentPage, historyList]);\n\n  if (!historyList || !currentData) return null;\n\n  return (\n    <ContentLayout>\n      <HistoryWrapper>\n        <HistoryHeader />\n        <HistoryList data={currentData} />\n        {/* {currentData &&\n          currentData.map((item, i) => <div key={i}>{item.groupName}</div>)} */}\n        <PaginationWrapper>\n          <Pagination\n            defaultCurrent={1}\n            total={historyList.length}\n            pageSize={5}\n            onChange={onChangePage}\n          />\n        </PaginationWrapper>\n      </HistoryWrapper>\n    </ContentLayout>\n  );\n};\n\nexport default History;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Input, Select, Button } from \"antd\";\nimport {\n  CLASS_DURATION_HOUR,\n  CLASS_DURATION_MINUTE,\n  ABSENCE_TIME,\n  ALERT_ATMOSPHERE,\n  BACK_URL,\n} from \"../../libs/constant/constant\";\nimport { palette } from \"../../libs/constant/palette\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst CreateGroupWrapper = styled.div``;\n\nconst InputLayout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nconst CreateGroup = ({ setIsHostModalVisible }) => {\n  const { me } = useSelector((state) => state.user);\n  const [isCreated, setIscreated] = useState(false);\n  const [groupId, setGroupId] = useState(null);\n  const onSubmit = (item) => {\n    axios\n      .post(`${BACK_URL}/api/group/createGroup`, {\n        name: item.groupName,\n        absenceTime: item.absenceTime,\n        alertDuration: item.alertTime,\n        userId: me && me.data.userId,\n      })\n      .then((res) => {\n        alert(\"The group created successfully.\");\n        setIsHostModalVisible(false);\n        setGroupId(res.data.id);\n        setIscreated(true);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  if (isCreated && groupId) return <Redirect to={`/main/${groupId}`} />;\n\n  return (\n    <CreateGroupWrapper>\n      <Form {...InputLayout} onFinish={onSubmit}>\n        <Form.Item\n          name=\"groupName\"\n          label=\"Group Name\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input Group Name.\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        {/* <Form.Item name=\"groupCode\" label=\"Group Code\" initialValue=\"aaa\">\n          <Input placeholder=\"ASDFSADF\" disabled />\n        </Form.Item> */}\n\n        <Form.Item label=\"Absence Time\">\n          <Form.Item\n            noStyle\n            name=\"absenceTime\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select placeholder=\"minute\" style={{ flex: \"1\" }}>\n              {ABSENCE_TIME.map((v, i) => (\n                <Select.Option key={i} value={v}>\n                  {v}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <div style={{ fontSize: \"0.7rem\", color: \"#bbb\" }}>\n            * Set Time for Attendance Failure\n          </div>\n        </Form.Item>\n        <Form.Item label=\"Alert Duration\">\n          <Form.Item\n            noStyle\n            name=\"alertTime\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select placeholder=\"minute\" style={{ flex: \"1\" }}>\n              {ALERT_ATMOSPHERE.map((v, i) => (\n                <Select.Option key={i} value={v}>\n                  {v}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <div style={{ fontSize: \"0.7rem\", color: \"#bbb\" }}>\n            * Set Time for Alert\n          </div>\n        </Form.Item>\n        <div style={{ textAlign: \"center\" }}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{\n              width: \"100px\",\n              background: palette.mainBG,\n              border: `1px solid ` + palette.mainBG,\n            }}\n          >\n            Create\n          </Button>\n        </div>\n      </Form>\n    </CreateGroupWrapper>\n  );\n};\n\nexport default CreateGroup;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Input, Select, Button } from \"antd\";\nimport { palette } from \"../../libs/constant/palette\";\nimport useInput from \"../../hooks/useInput\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  loadWaitingListRequestAction,\n  joinToWaiting,\n} from \"../../reducers/post\";\n\nconst JoinGroupWrapper = styled.div``;\n\nconst JoinGroup = ({ setIsGuestModalVisible }) => {\n  const { me } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const onSubmit = (item) => {\n    if (me) {\n      axios\n        .post(`api/group/joinGroup/${me.data.userId}`, {\n          groupEnterCode: item.groupCode,\n        })\n        .then((res) => {\n          console.log(\"join gropup\", res);\n          dispatch(loadWaitingListRequestAction(me.data.userId));\n          alert(\"You have completed the application for participation.\");\n          setIsGuestModalVisible(false);\n          // axios\n          //   .post(`/api/group/getGroupInfo`, {\n          //     groupId: res.data.id,\n          //     userid: me.data.userId,\n          //   })\n          //   .then((res) => {\n          //     console.log(res);\n          //     dispatch(joinToWaiting({ groupName: res.data.groupName }));\n          //     // 여기서 프론트 데이터 업데이트\n          //   });\n          console.log(res);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  };\n\n  return (\n    <JoinGroupWrapper>\n      <Form onFinish={onSubmit}>\n        <Form.Item\n          name=\"groupCode\"\n          label=\"Group Code\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input Group Code.\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <div style={{ textAlign: \"center\" }}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{\n              width: \"100px\",\n              background: palette.mainBG,\n              border: `1px solid ` + palette.mainBG,\n            }}\n          >\n            Join\n          </Button>\n        </div>\n      </Form>\n    </JoinGroupWrapper>\n  );\n};\n\nexport default JoinGroup;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Image, Button, Descriptions } from \"antd\";\nimport ExampleProfileImage from \"../../statics/images/ExampleProfileImage.jpeg\";\nimport useToggle from \"../../hooks/useToggle\";\nimport Modal from \"../common/Modal\";\nimport CreateGroup from \"./CreateGroup\";\nimport JoinGroup from \"./JoinGroup\";\nimport { useSelector } from \"react-redux\";\n\nconst MainHeaderWrapper = styled.div`\n  display: flex;\n  .ant-descriptions .ant-descriptions-bordered {\n    height: 100%;\n  }\n  .ant-descriptions-view {\n    height: 180px;\n    th,\n    td {\n      height: 180px;\n    }\n  }\n`;\nconst MyProfileWrapper = styled.div`\n  border: 1px solid #ddd;\n  border-right: none;\n  flex: 1;\n  display: flex;\n  .profile-image {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    .ant-image {\n      display: flex;\n\n      align-items: center;\n    }\n  }\n  .profile-desc {\n    flex: 1;\n    /* border: 1px solid blue; */\n    display: flex;\n    flex-direction: column;\n    .info {\n      text-align: right;\n      font-size: 1.2rem;\n      background: #ffc224;\n      color: #fff;\n      padding-right: 10px;\n    }\n    .role {\n      flex: 1;\n      font-weight: 400;\n      font-size: 0.75rem;\n      border: 1px solid #ddd;\n      border-bottom: none;\n      text-align: center;\n      line-height: 40px;\n      color: #aaa;\n    }\n    .username {\n      flex: 1;\n      font-size: 1.55rem;\n      border: 1px solid #ddd;\n      border-bottom: none;\n\n      padding: 20px;\n      text-align: center;\n    }\n  }\n`;\n\nconst RoomBtnWrapper = styled.div`\n  display: flex;\n  border: 1px solid #ddd;\n  border-left: none;\n  flex: 1;\n  height: 180px;\n\n  .guest {\n    flex: 1;\n    padding: 25px;\n  }\n  .host {\n    flex: 1;\n    padding: 25px;\n  }\n  .btn-guest,\n  .btn-host {\n    width: 100%;\n    height: 100%;\n    border-radius: 5px;\n    font-size: 2.5rem;\n  }\n  .btn-guest {\n    background-color: #aeb0d3;\n    border: 1px solid #aeb0d3;\n  }\n  .btn-host {\n    background-color: #fff;\n    border: 2px solid #aeb0d3;\n    color: #aeb0d3;\n  }\n`;\n\nconst MainHeader = () => {\n  const [\n    isGuestModalVisible,\n    setIsGuestModalVisible,\n    handleGuestVisible,\n  ] = useToggle(false);\n\n  const [\n    isHostModalVisible,\n    setIsHostModalVisible,\n    handleHostVisible,\n  ] = useToggle(false);\n\n  const { me } = useSelector((state) => state.user);\n\n  if (!me) return null;\n\n  return (\n    <MainHeaderWrapper>\n      {/* <MyProfileWrapper>\n        <div className=\"profile-image\">\n          <Image\n            width={120}\n            src={`data:image/png;base64,` + me.data.profileImage}\n            style={{ marginRight: \"20px\" }}\n          />\n        </div>\n        <div className=\"profile-desc\">\n          <div className=\"info\">Info</div>\n          <div className=\"role\">{me.data.email}</div>\n          <div className=\"username\">{me.data.name}</div>\n        </div>\n      </MyProfileWrapper> */}\n      <div style={{ flex: \"1\" }}>\n        <Descriptions bordered>\n          <Descriptions.Item>\n            <Image\n              width={120}\n              src={`data:image/png;base64,` + me.data.profileImage}\n              style={{ marginRight: \"20px\" }}\n            />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Name\">{me.data.name}</Descriptions.Item>\n          <Descriptions.Item label=\"Email\">{me.data.email}</Descriptions.Item>\n        </Descriptions>\n      </div>\n\n      <RoomBtnWrapper>\n        <div className=\"guest\">\n          <Button\n            type=\"primary\"\n            className=\"btn-guest\"\n            onClick={handleGuestVisible}\n          >\n            Guest\n          </Button>\n          <Modal\n            title=\"Join Group\"\n            isModalVisible={isGuestModalVisible}\n            setIsModalVisible={setIsGuestModalVisible}\n            footer={false}\n            width={400}\n          >\n            <JoinGroup setIsGuestModalVisible={setIsGuestModalVisible} />\n          </Modal>\n        </div>\n        <div className=\"host\">\n          <Button\n            type=\"primary\"\n            className=\"btn-host\"\n            onClick={handleHostVisible}\n          >\n            Host\n          </Button>\n          <Modal\n            title=\"Create Group\"\n            isModalVisible={isHostModalVisible}\n            setIsModalVisible={setIsHostModalVisible}\n            footer={false}\n            width={700}\n          >\n            <CreateGroup setIsHostModalVisible={setIsHostModalVisible} />\n          </Modal>\n        </div>\n      </RoomBtnWrapper>\n    </MainHeaderWrapper>\n  );\n};\n\nexport default MainHeader;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst ItemWrapper = styled.div`\n  display: flex;\n\n  font-size: 0.75rem;\n  padding: 3px 0;\n  ${(props) =>\n    props.index % 2 === 0 &&\n    css`\n      background: #f7f5fa;\n    `}\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nconst ColWrapper = styled.div`\n  flex: 1;\n  /* border: 1px solid red; */\n  padding: 5px;\n  text-align: center;\n`;\n\nconst MainListItem = ({ item, index }) => {\n  return (\n    <ItemWrapper index={index}>\n      {item.enterCode ? (\n        <ColWrapper>{item.name}</ColWrapper>\n      ) : (\n        <ColWrapper>{item.groupName}</ColWrapper>\n      )}\n      {item.enterCode && <ColWrapper>{item.enterCode}</ColWrapper>}\n      <ColWrapper>{item.onAir ? \"ON\" : \"OFF\"}</ColWrapper>\n      {item.role && <ColWrapper>{item.role}</ColWrapper>}\n    </ItemWrapper>\n  );\n};\n\nexport default MainListItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MainListIndexWrapper = styled.div`\n  display: flex;\n  padding: 5px 0;\n  font-weight: bold;\n  background: #aeb0d3;\n  color: #fff;\n`;\n\nconst IndexItem = styled.div`\n  flex: 1;\n  text-align: center;\n`;\n\nconst MainListIndex = ({ type }) => {\n  return (\n    <MainListIndexWrapper>\n      <IndexItem>Group Name</IndexItem>\n      {type === \"group\" && <IndexItem>Enter Code</IndexItem>}\n      <IndexItem>Status</IndexItem>\n      {type === \"group\" && <IndexItem>Role</IndexItem>}\n    </MainListIndexWrapper>\n  );\n};\n\nexport default MainListIndex;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MainListItem from \"./MainListItem\";\nimport MainListIndex from \"./MainListIndex\";\nimport { Pagination } from \"antd\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst PaginationWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  .ant-pagination {\n    .ant-pagination-item {\n      &:hover {\n        border: 1px solid #aeb0d3;\n      }\n      a {\n        font-weight: 600;\n        color: #aeb0d3;\n      }\n    }\n    .ant-pagination-item-active {\n      border-color: #aeb0d3;\n      background-color: #aeb0d3;\n\n      a {\n        color: #fff;\n      }\n    }\n    .ant-pagination-item-link {\n      &:hover {\n        border-color: #aeb0d3;\n        color: #aeb0d3;\n      }\n    }\n  }\n`;\n\nconst LinkWrapper = styled(Link)`\n  color: #000;\n  &:hover {\n    color: #000;\n  }\n`;\n\nconst MainList = ({ data, type }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentData, setCurrentData] = useState(data);\n\n  const onChangePage = (page) => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    let newData = data.slice((currentPage - 1) * 5, (currentPage - 1) * 5 + 5);\n    setCurrentData(newData);\n  }, [currentPage, data]);\n\n  return (\n    <>\n      <MainListIndex type={type} />\n      {type === \"group\"\n        ? currentData.map((item, i) => (\n            <LinkWrapper to={`/main/${item.id}`} key={i}>\n              <MainListItem item={item} key={i} index={i}></MainListItem>\n            </LinkWrapper>\n          ))\n        : currentData.map((item, i) => (\n            <MainListItem item={item} key={i} index={i}></MainListItem>\n          ))}\n      <PaginationWrapper>\n        <Pagination\n          defaultCurrent={1}\n          total={data.length}\n          pageSize={5}\n          onChange={onChangePage}\n        />\n      </PaginationWrapper>\n    </>\n  );\n};\n\nexport default MainList;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Divider, Pagination } from \"antd\";\nimport MainList from \"../common/MainList\";\nimport MainListIndex from \"../common/MainListIndex\";\nimport { groupList } from \"../../libs/util/dummyCreator\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport {\n  loadGroupListRequestAction,\n  loadIntervalGroupList,\n} from \"../../reducers/post\";\nimport { Spin } from \"antd\";\n\nconst GroupListWrapper = styled.div`\n  flex: 1;\n`;\n\nconst ListWrapper = styled.div`\n  border: 1px solid #ddd;\n  height: 300px;\n  position: relative;\n`;\n\nconst Skeleton = styled.div`\n  height: 300px;\n  text-align: center;\n  line-height: 300px;\n`;\n\nconst GroupList = () => {\n  const dispatch = useDispatch();\n  const { groupList } = useSelector((state) => state.post);\n  const { me } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (me) {\n      dispatch(loadGroupListRequestAction(me.data.userId));\n    }\n  }, [me]);\n\n  useEffect(() => {\n    let loadGroupListInterval;\n\n    if (me) {\n      loadGroupListInterval = setInterval(() => {\n        console.log(\"그룹리스트 업데이트..\");\n        dispatch(loadIntervalGroupList(me.data.userId));\n      }, 2500);\n    }\n\n    return () => {\n      clearInterval(loadGroupListInterval);\n    };\n  }, [me]);\n\n  return (\n    <GroupListWrapper>\n      <Divider orientation=\"left\" style={{ color: \"#bbb\" }}>\n        Group List\n      </Divider>\n      <ListWrapper>\n        {!groupList ? (\n          <Skeleton>\n            <Spin></Spin>\n          </Skeleton>\n        ) : (\n          <MainList data={groupList.data} type=\"group\" />\n        )}\n      </ListWrapper>\n    </GroupListWrapper>\n  );\n};\n\nexport default GroupList;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Divider } from \"antd\";\nimport MainList from \"../common/MainList\";\nimport { waitingList } from \"../../libs/util/dummyCreator\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport {\n  loadWaitingListRequestAction,\n  loadIntervalWaitingList,\n} from \"../../reducers/post\";\nimport { Spin } from \"antd\";\n\nconst WaitingListWrapper = styled.div`\n  flex: 1;\n  margin-left: 30px;\n`;\n\nconst ListWrapper = styled.div`\n  border: 1px solid #ddd;\n  height: 300px;\n  position: relative;\n`;\n\nconst Skeleton = styled.div`\n  height: 300px;\n  text-align: center;\n  line-height: 300px;\n`;\n\nconst WaitingList = () => {\n  const dispatch = useDispatch();\n  const { waitingList } = useSelector((state) => state.post);\n  const { me } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (me) {\n      dispatch(loadWaitingListRequestAction(me.data.userId));\n    }\n  }, [me]);\n\n  useEffect(() => {\n    let loadGroupListInterval;\n\n    if (me) {\n      loadGroupListInterval = setInterval(() => {\n        console.log(\"대기리스트 업데이트...\");\n        dispatch(loadIntervalWaitingList(me.data.userId));\n      }, 2500);\n    }\n\n    return () => {\n      clearInterval(loadGroupListInterval);\n    };\n  }, [me]);\n\n  return (\n    <WaitingListWrapper>\n      <Divider orientation=\"left\" style={{ color: \"#bbb\" }}>\n        Waiting List\n      </Divider>\n      <ListWrapper>\n        {!waitingList ? (\n          <Skeleton>\n            <Spin></Spin>\n          </Skeleton>\n        ) : (\n          <MainList data={waitingList.data} type=\"waiting\" />\n        )}\n      </ListWrapper>\n    </WaitingListWrapper>\n  );\n};\n\nexport default WaitingList;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Divider, Progress, Switch } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport {\n  loadGuestRecentTrendsRequestAction,\n  loadHostRecentTrendsRequestAction,\n} from \"../../reducers/post\";\n\nconst RecentTrendsWrapper = styled.div`\n  .ant-switch-checked {\n    background: #aeb0d3;\n  }\n`;\n\nconst RatesWrapper = styled.div`\n  display: flex;\n  border: 1px solid #ddd;\n`;\n\nconst RateItem = styled.div`\n  flex: 1;\n  text-align: center;\n  padding: 20px 0;\n`;\n\nconst RateDesc = styled.div``;\n\nconst RecentTrends = () => {\n  const dispatch = useDispatch();\n\n  const { guestRecentTrends } = useSelector((state) => state.post);\n  const { hostRecentTrends } = useSelector((state) => state.post);\n\n  const { me } = useSelector((state) => state.user);\n\n  const [currentRole, setCurrentRole] = useState(true);\n\n  const onChangeRole = (checked) => {\n    setCurrentRole(checked);\n  };\n\n  useEffect(() => {\n    dispatch(loadGuestRecentTrendsRequestAction(me.data.userId));\n  }, [me]);\n\n  useEffect(() => {\n    dispatch(loadHostRecentTrendsRequestAction(me.data.userId));\n  }, [me]);\n\n  if (!guestRecentTrends || !hostRecentTrends) return null;\n\n  return (\n    <RecentTrendsWrapper>\n      <Divider orientation=\"left\" style={{ color: \"#bbb\" }}>\n        Recent Trends\n      </Divider>\n\n      <div style={{ textAlign: \"right\", padding: \"20px 0\" }}>\n        <Switch\n          checkedChildren=\"Guest\"\n          unCheckedChildren=\"Host\"\n          defaultChecked\n          onChange={onChangeRole}\n        />\n      </div>\n\n      <RatesWrapper>\n        {currentRole === true ? (\n          <>\n            <RateItem>\n              <Progress\n                type=\"circle\"\n                percent={guestRecentTrends.attendanceRate}\n                format={(percent) =>\n                  `${\n                    percent <= 33 && percent >= 0\n                      ? `${percent} % 😵`\n                      : percent <= 66 && percent >= 34\n                      ? `${percent} % 😐`\n                      : `${percent} % 😊`\n                  }`\n                }\n              />\n              <RateDesc>Attendance Rate</RateDesc>\n            </RateItem>\n            <RateItem>\n              <Progress\n                type=\"circle\"\n                percent={guestRecentTrends.concentrationRate * 30}\n                format={(percent) =>\n                  `${\n                    percent === 1 ? \"Bad..\" : percent === 2 ? \"Normal\" : \"Good!\"\n                  }`\n                }\n              />\n              <RateDesc>Concentration Rate</RateDesc>\n            </RateItem>\n            {/* <RateItem>\n              <Progress\n                type=\"circle\"\n                percent={guestRecentTrends.drowsinessRate}\n              />\n              <RateDesc>Drowsiness Rate</RateDesc>\n            </RateItem> */}\n          </>\n        ) : (\n          <>\n            <RateItem>\n              <Progress\n                type=\"circle\"\n                percent={hostRecentTrends.attendanceRate}\n                format={(percent) =>\n                  `${\n                    percent <= 33 && percent >= 0\n                      ? `${percent} % 😵`\n                      : percent <= 66 && percent >= 34\n                      ? `${percent} % 😐`\n                      : `${percent} % 😊`\n                  }`\n                }\n              />\n              <RateDesc>Attendance Rate</RateDesc>\n            </RateItem>\n            <RateItem>\n              <Progress\n                type=\"circle\"\n                percent={hostRecentTrends.concentrationRate * 30}\n                format={(percent) =>\n                  `${\n                    percent === 1 ? \"Bad..\" : percent === 2 ? \"Normal\" : \"Good!\"\n                  }`\n                }\n              />\n              <RateDesc>Concentration Rate</RateDesc>\n            </RateItem>\n            {/* <RateItem>\n              <Progress\n                type=\"circle\"\n                percent={hostRecentTrends.drowsinessRate}\n              />\n              <RateDesc>Drowsiness Rate</RateDesc>\n            </RateItem> */}\n          </>\n        )}\n      </RatesWrapper>\n      <div\n        style={{\n          textAlign: \"right\",\n          fontSize: \"0.7rem\",\n          color: \"#bbb\",\n          padding: \"10px 0\",\n        }}\n      >\n        <span style={{ color: \"red\" }}>*</span> Shows the average Trends for the\n        last 10 classes.\n      </div>\n    </RecentTrendsWrapper>\n  );\n};\n\nexport default RecentTrends;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ContentLayout from \"../components/layout/ContentLayout\";\nimport MainHeader from \"../components/main/MainHeader\";\nimport GroupList from \"../components/main/GroupList\";\nimport WaitingList from \"../components/main/WaitingList\";\nimport RecentTrends from \"../components/main/RecentTrends\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport {\n  initializeGroupAndWaitingList,\n  loadIntervalGroupList,\n} from \"../reducers/post\";\n\nconst MainWrapper = styled.div``;\n\n// redux 그룹리스트, 웨이팅리스트, 최근동향 데이터 필요\nconst Main = ({ history }) => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeGroupAndWaitingList());\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   let loadGroupListInterval;\n\n  //   if (me) {\n  //     loadGroupListInterval = setInterval(() => {\n  //       dispatch(loadIntervalGroupList(me.data.userId));\n  //     }, 1000);\n  //   }\n\n  //   return () => {\n  //     clearInterval(loadGroupListInterval);\n  //   };\n  // }, [me]);\n\n  if (!me) {\n    history.push(\"/\");\n  }\n\n  return (\n    <ContentLayout>\n      <MainWrapper>\n        <MainHeader />\n        <div style={{ display: \"flex\" }}>\n          <GroupList />\n          <WaitingList />\n        </div>\n        <div\n          style={{\n            textAlign: \"right\",\n            fontSize: \"0.7rem\",\n            color: \"#bbb\",\n            padding: \"10px 0\",\n          }}\n        >\n          <span style={{ color: \"red\" }}>*</span> This is the admission queue. A\n          notification will be sent upon rejection.\n        </div>\n        <RecentTrends />\n      </MainWrapper>\n    </ContentLayout>\n  );\n};\n\nexport default Main;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\nimport { Button, Input, Select, notification } from \"antd\";\nimport useTimer from \"../../hooks/useTimer\";\nimport axios from \"axios\";\nimport {\n  BACK_URL,\n  WHOLE_MINUTE,\n  CLASS_DURATION_MINUTE,\n} from \"../../libs/constant/constant\";\nimport { Redirect } from \"react-router-dom\";\nimport useInput from \"../../hooks/useInput\";\n\nconst SummaryWrapper = styled.div``;\n\nconst SummaryHeader = styled.div`\n  border: 1px solid #ddd;\n  border-bottom: none;\n  padding: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  .clock {\n    .onAir-clock,\n    .onAir-clock-activate {\n      width: 100px;\n\n      padding: 0 20px;\n      margin: 0 20px;\n      font-weight: bold;\n      text-align: center;\n    }\n    .onAir-clock {\n      border: 1px solid #ddd;\n    }\n    .onAir-clock-activate {\n      background: #ff4d4f;\n      color: #fff;\n    }\n  }\n`;\n\nconst SummaryContent = styled.div`\n  /* border: 1px solid red; */\n  .table-index {\n    width: 20%;\n    height: 35px;\n    font-weight: 600;\n  }\n  .table-content {\n    color: #999;\n  }\n  td {\n    padding: 10px;\n  }\n`;\n\nconst SummaryFooter = styled.div`\n  padding: 10px 0;\n  /* border: 1px solid red; */\n  text-align: right;\n  .footer-btn {\n    margin-left: 3px;\n  }\n`;\n\nconst openNotification = (placement) => {\n  notification.info({\n    message: `${\n      new Date().getHours() < 10\n        ? `0` + new Date().getHours()\n        : new Date().getHours()\n    }:${\n      new Date().getMinutes() < 10\n        ? `0` + new Date().getMinutes()\n        : new Date().getMinutes()\n    }:${\n      new Date().getSeconds() < 10\n        ? `0` + new Date().getSeconds()\n        : new Date().getSeconds()\n    }`,\n    description:\n      placement === 3\n        ? \"Current Classes's Vibe is Good.\"\n        : placement === 2\n        ? \"Current Classes's Vibe is Normal.\"\n        : \"Current Classes's Vibe is Bad.\",\n    placement,\n    duration: 0,\n  });\n};\n\n// 게스트, 호스트에 따라 다르게\nconst Summary = ({ onAir, setOnAir }) => {\n  const { groupDetail } = useSelector((state) => state.post);\n  const { me } = useSelector((state) => state.user);\n  //const [onAir, setOnAir] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const [isLeaved, setIsLeaved] = useState(false);\n  const [isRemoved, setIsRemoved] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [saveDone, setSaveDone] = useState(false);\n\n  const [editName, setEditName, onChangeEditName] = useInput(\n    groupDetail ? groupDetail.data.groupName : \"\",\n  );\n  const [editAbsenceTime, setEditAbsenceTime] = useState(0);\n  const onChangeEditAbsenceTime = (value) => {\n    setEditAbsenceTime(value);\n  };\n  const [editAlertDuration, setEditAlertDuration] = useState(0);\n  const onChangeEditAlertDuration = (value) => {\n    setEditAlertDuration(value);\n  };\n\n  const [h, m, s] = useTimer(onAir);\n\n  const [alertTimer, setAlertTimer] = useState(0);\n\n  const startClass = () => {\n    // 주기호출 api call 만들어야함\n    if (!onAir) {\n      let startClassConfirm = window.confirm(\"Would you like to start class?\");\n      if (startClassConfirm) {\n        setOnAir(true);\n        axios\n          .post(\n            `${BACK_URL}/api/group/startSession/${\n              document.location.href.split(\"/\")[\n                document.location.href.split(\"/\").length - 1\n              ]\n            }`,\n          )\n          .then((res) => {\n            setSessionId(res.data.id);\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      }\n    }\n  };\n\n  const endClass = () => {\n    // 히스토리 생성 -> 백엔드로 플래그 보내야함\n    if (onAir && sessionId) {\n      let endClassConfirm = window.confirm(\"Would you like to end class?\");\n      if (endClassConfirm) {\n        setOnAir(false);\n        axios\n          .post(`${BACK_URL}/api/group/endSession/${sessionId}`)\n          .then((res) => {\n            console.log(\"수업종료.\");\n            setAlertTimer(0);\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      }\n    }\n  };\n\n  // host\n  const saveGroupDetail = () => {\n    let saveConfirm = window.confirm(\"Do you really want to edit?\");\n    if (saveConfirm) {\n      axios\n        .post(\n          `/api/group/editGroupInfo/${\n            document.location.href.split(\"/\")[\n              document.location.href.split(\"/\").length - 1\n            ]\n          }`,\n          {\n            name: editName,\n            absenceTime: editAbsenceTime,\n            alertDuration: editAlertDuration,\n          },\n        )\n        .then((res) => {\n          setIsEdit(false);\n          setSaveDone(true);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  };\n\n  const removeGroup = () => {\n    let removeConfirm = window.confirm(\"Are you really want remove the group?\");\n    if (removeConfirm) {\n      if (me) {\n        axios\n          .delete(\n            `/api/group/deleteGroup/${\n              document.location.href.split(\"/\")[\n                document.location.href.split(\"/\").length - 1\n              ]\n            }`,\n          )\n          .then((res) => {\n            setIsRemoved(true);\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      }\n    }\n  };\n\n  //guest\n  const leaveGroup = () => {\n    let leaveConfirm = window.confirm(\"Are you really want leave the group?\");\n    if (leaveConfirm) {\n      if (me) {\n        axios\n          .post(\n            `/api/group/exitGroup/${\n              document.location.href.split(\"/\")[\n                document.location.href.split(\"/\").length - 1\n              ]\n            }`,\n            { userId: me.data.userId },\n          )\n          .then((res) => {\n            setIsLeaved(true);\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      }\n    }\n  };\n\n  // 수업 분위기 알림\n\n  useEffect(() => {\n    let intervalAlert;\n\n    if (onAir && groupDetail) {\n      intervalAlert = setInterval(() => {\n        axios\n          .get(`/api/history/getVibe/${sessionId}`)\n          .then((res) => {\n            console.log(\"웹캠을 킨 학생이 있습니다 - 수업분위기는\", res.data);\n            setAlertTimer(alertTimer + 1);\n            // console.log(alertTimer, groupDetail.data.alertTime);\n            if (\n              // -> 분석 결과 시간에 따른 알림 시간 설정\n              alertTimer !== 0 &&\n              alertTimer % (groupDetail.data.alertTime * 60) === 0\n            ) {\n              console.log(\"알림 시간 설정에 따른 알림\", res.data.vibe);\n              openNotification(res.data.vibe);\n            }\n          })\n          .catch((e) => {\n            console.log(\"아직 웸캡을 킨 학생이 없습니다.\");\n          });\n      }, 2000);\n    } else {\n      clearInterval(intervalAlert);\n    }\n    return () => {\n      clearInterval(intervalAlert);\n    };\n  }, [sessionId, onAir, alertTimer, groupDetail]);\n\n  if (!groupDetail) return null;\n\n  if (isLeaved || isRemoved) return <Redirect to={`/main`} />;\n\n  if (saveDone)\n    return (\n      <Redirect\n        to={`/main/${\n          document.location.href.split(\"/\")[\n            document.location.href.split(\"/\").length - 1\n          ]\n        }`}\n      />\n    );\n\n  return (\n    <SummaryWrapper>\n      {groupDetail.data.role === \"HOST\" && (\n        <SummaryHeader>\n          <span\n            className=\"alert-text\"\n            style={{\n              // border: \"1px solid red\",\n              fontSize: \"0.75rem\",\n              color: \"#bbb\",\n            }}\n          >\n            <span style={{ color: \"red\", paddingLeft: \"10px\" }}>*</span> If you\n            leave this page without saving, you may lose your work.\n          </span>\n\n          <div\n            className=\"clock\"\n            style={{\n              // border: \"1px solid red\",\n              padding: \"0 20px\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            {onAir ? (\n              <div className=\"onAir-clock onAir-clock-activate\">\n                <div className=\"on-air\">ON AIR</div>\n                <div className=\"clock\">{`${h}:${m}:${s}`}</div>\n              </div>\n            ) : (\n              <div className=\"onAir-clock\">\n                <div className=\"on-air\">ON AIR</div>\n                <div className=\"clock\">{`${h}:${m}:${s}`}</div>\n              </div>\n            )}\n\n            <Button onClick={startClass}>START</Button>\n            <Button onClick={endClass}>END</Button>\n          </div>\n        </SummaryHeader>\n      )}\n\n      <SummaryContent>\n        <table border=\"1\" style={{ border: \"1px solid #ddd\" }} width=\"100%\">\n          <tbody>\n            <tr>\n              <td className=\"table-index\">\n                <span>Group Code</span>\n              </td>\n              <td className=\"table-content\">\n                <span>{groupDetail.data.groupCode}</span>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"table-index\">\n                <span>Group Name</span>\n              </td>\n              <td className=\"table-content\">\n                {isEdit ? (\n                  <>\n                    <Input\n                      defaultValue={groupDetail.data.groupName}\n                      onChange={onChangeEditName}\n                    ></Input>\n                  </>\n                ) : (\n                  <span>{groupDetail.data.groupName}</span>\n                )}\n              </td>\n            </tr>\n            <tr>\n              <td className=\"table-index\">\n                <span>Absence Time</span>\n              </td>\n              <td className=\"table-content\">\n                {isEdit ? (\n                  <>\n                    <Select\n                      placeholder=\"Absence Time\"\n                      onChange={onChangeEditAbsenceTime}\n                    >\n                      {CLASS_DURATION_MINUTE.map((v, i) => (\n                        <Select.Option key={i}>{v}</Select.Option>\n                      ))}\n                    </Select>\n                    <span style={{ marginLeft: \"10px\" }}>minutes</span>\n                  </>\n                ) : (\n                  <span>{groupDetail.data.absenceTime} minutes</span>\n                )}\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"table-index\">\n                <span>Alert Duration</span>\n              </td>\n              <td className=\"table-content\">\n                {isEdit ? (\n                  <>\n                    <Select\n                      placeholder=\"Alert Duration\"\n                      onChange={onChangeEditAlertDuration}\n                    >\n                      {CLASS_DURATION_MINUTE.map((v, i) => (\n                        <Select.Option key={i}>{v}</Select.Option>\n                      ))}\n                    </Select>\n                    <span style={{ marginLeft: \"10px\" }}>minutes</span>\n                  </>\n                ) : (\n                  <span>{groupDetail.data.alertTime} minutes</span>\n                )}\n              </td>\n            </tr>\n            <tr>\n              <td className=\"table-index\">\n                <span>Host Name</span>\n              </td>\n              <td className=\"table-content\">{groupDetail.data.host}</td>\n            </tr>\n          </tbody>\n        </table>\n      </SummaryContent>\n      {groupDetail.data.role === \"HOST\" ? (\n        <SummaryFooter>\n          {isEdit ? (\n            <Button\n              className=\"footer-btn\"\n              type=\"primary\"\n              onClick={saveGroupDetail}\n            >\n              Save\n            </Button>\n          ) : (\n            <Button\n              className=\"footer-btn\"\n              type=\"primary\"\n              onClick={() => {\n                setIsEdit(true);\n              }}\n              disabled={onAir ? true : false}\n            >\n              Edit\n            </Button>\n          )}\n\n          <Button\n            className=\"footer-btn\"\n            type=\"danger\"\n            onClick={removeGroup}\n            disabled={onAir ? true : false}\n          >\n            Remove Group\n          </Button>\n        </SummaryFooter>\n      ) : (\n        <SummaryFooter>\n          <Button type=\"danger\" onClick={leaveGroup}>\n            Leave the Group\n          </Button>\n        </SummaryFooter>\n      )}\n    </SummaryWrapper>\n  );\n};\n\nexport default Summary;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Divider, Button } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  allowMemberRequestAction,\n  rejectMemberRequestAction,\n  waitingToGroup,\n  waitingToNone,\n  loadWaitingMember,\n} from \"../../reducers/post\";\n\n// 그룹멤버리스트, 대기리스트 분기해야함\n\nconst MemberListContainer = styled.div`\n  flex: 1;\n  /* padding: 10px; */\n`;\n\nconst MemberListWrapper = styled.div`\n  height: 25vh;\n  overflow: auto;\n  border: 1px solid #ddd;\n  table {\n    border-color: #ddd;\n  }\n  tr {\n    border-color: #ddd;\n  }\n  .th {\n    padding: 7px;\n    background: #aeb0d3;\n    color: #fff;\n  }\n  .td-gm,\n  .td-wm {\n    padding: 4px 7px;\n  }\n  .th-name,\n  .td-gm-name {\n    width: 30%;\n  }\n  .td-wm-btn {\n    font-size: 0.75rem;\n    margin-left: 3px;\n  }\n`;\n\nconst MemberList = ({ type, onAir }) => {\n  const dispatch = useDispatch();\n  const { groupDetail } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    let loadWaitingMemberInterval;\n\n    loadWaitingMemberInterval = setInterval(() => {\n      console.log(\"대기리스트 멤버 업데이트.....\");\n      dispatch(\n        loadWaitingMember(\n          document.location.href.split(\"/\")[\n            document.location.href.split(\"/\").length - 1\n          ],\n        ),\n      );\n    }, 5000);\n\n    return () => {\n      clearInterval(loadWaitingMemberInterval);\n    };\n  }, []);\n\n  const allowMember = (userEmail, groupId, name) => {\n    dispatch(waitingToGroup({ name, userEmail }));\n    dispatch(waitingToNone({ name, userEmail }));\n    dispatch(allowMemberRequestAction({ userEmail, groupId }));\n  };\n\n  const rejectMember = (userEmail, groupId, name) => {\n    dispatch(waitingToNone({ name, userEmail }));\n    dispatch(rejectMemberRequestAction({ userEmail, groupId }));\n  };\n\n  if (!groupDetail) return null;\n\n  return (\n    <MemberListContainer>\n      <Divider orientation=\"left\">\n        {type === \"groupMember\" ? \"Group Member\" : \"Waiting Member\"}\n      </Divider>\n      <MemberListWrapper>\n        <table width=\"100%\" style={{ border: \"1px solid #ddd\" }}>\n          <tbody>\n            <tr>\n              <th className=\"th th-name\">Name</th>\n              <th className=\"th\">Email</th>\n              {type === \"waitingMember\" && <th className=\"th\">Enter</th>}\n            </tr>\n            {type === \"groupMember\"\n              ? groupDetail.data.groupMemberSimpleDtoList.map((v, i) => (\n                  <tr key={i}>\n                    <td className=\"td-gm td-gm-name\">{v.name}</td>\n                    <td className=\"td-gm\">{v.email}</td>\n                  </tr>\n                ))\n              : groupDetail.data.waitingMemberDtoList.map((v, i) => (\n                  <tr key={i}>\n                    <td className=\"td-wm\">{v.name}</td>\n                    <td className=\"td-wm\">{v.email}</td>\n                    <td className=\"td-wm\" style={{ textAlign: \"center\" }}>\n                      <Button\n                        className=\"td-wm-btn\"\n                        onClick={() => {\n                          allowMember(\n                            v.email,\n                            document.location.href.split(\"/\")[\n                              document.location.href.split(\"/\").length - 1\n                            ],\n                            v.name,\n                          );\n                        }}\n                        disabled={onAir ? true : false}\n                      >\n                        Accept\n                      </Button>\n                      <Button\n                        disabled={onAir ? true : false}\n                        className=\"td-wm-btn\"\n                        onClick={() => {\n                          rejectMember(\n                            v.email,\n                            document.location.href.split(\"/\")[\n                              document.location.href.split(\"/\").length - 1\n                            ],\n                            v.name,\n                          );\n                        }}\n                      >\n                        Reject\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n          </tbody>\n        </table>\n      </MemberListWrapper>\n    </MemberListContainer>\n  );\n};\n\nexport default MemberList;\n","import React, { useRef, useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Webcam from \"react-webcam\";\nimport { Button, notification } from \"antd\";\nimport axios from \"axios\";\nimport FormData from \"form-data\";\nimport { useSelector } from \"react-redux\";\nimport faker from \"faker\";\n\nconst Container = styled.div`\n  border: 1px solid #ddd;\n  padding: 20px;\n`;\n\nconst GuestWebcamWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst ButtonsWrapper = styled.div`\n  text-align: center;\n  padding-bottom: 10px;\n`;\n\nconst videoConstraints = {\n  width: 300,\n  height: 300,\n  facingMode: \"user\",\n};\n\nconst openNotification = (placement) => {\n  notification.info({\n    message: `${\n      new Date().getHours() < 10\n        ? `0` + new Date().getHours()\n        : new Date().getHours()\n    }:${\n      new Date().getMinutes() < 10\n        ? `0` + new Date().getMinutes()\n        : new Date().getMinutes()\n    }:${\n      new Date().getSeconds() < 10\n        ? `0` + new Date().getSeconds()\n        : new Date().getSeconds()\n    }`,\n    description: \"You have been away for a long time. You have been absent.\",\n    placement,\n    duration: 0,\n  });\n};\n\nconst openNotification2 = (placement) => {\n  notification.info({\n    message: `${\n      new Date().getHours() < 10\n        ? `0` + new Date().getHours()\n        : new Date().getHours()\n    }:${\n      new Date().getMinutes() < 10\n        ? `0` + new Date().getMinutes()\n        : new Date().getMinutes()\n    }:${\n      new Date().getSeconds() < 10\n        ? `0` + new Date().getSeconds()\n        : new Date().getSeconds()\n    }`,\n    description: \"Wake up! It's time to focus!\",\n    placement,\n    duration: 0,\n  });\n};\n\nconst formData = new FormData();\nconst formData2 = new FormData();\nformData2.append(\"keys\", \"key 값 \");\nlet intervalCapture;\n\nconst GuestWebcam = () => {\n  const webcamRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [enableWebcam, setEnableWebcam] = useState(false);\n\n  const [absenceFlag, setAbsenceFlag] = useState(false);\n  const [absenceTime, setAbsenceTime] = useState(0);\n  const [absenceCount, setAbsenceCount] = useState(0);\n\n  const [drowFlag, setDrowFlag] = useState(false);\n  const [drowTime, setDrowTime] = useState(0);\n  const [drowCount, setDrowCount] = useState(0);\n\n  const [isOnAir, setIsOnAir] = useState(false);\n\n  const [sessionId, setSessionId] = useState(false);\n\n  const [initFlag, setInitFlag] = useState(true);\n\n  const { groupDetail } = useSelector((state) => state.post);\n  const { me } = useSelector((state) => state.user);\n\n  const capture = useCallback(() => {\n    if (me && groupDetail) {\n      formData.delete(\"file\");\n      const imageSrc = webcamRef.current.getScreenshot();\n      console.log(\"capturing Image\", imageSrc.slice(0, 10));\n      formData.append(\"file\", imageSrc);\n      formData.append(\"userId\", me.data.userId);\n      formData.append(\n        \"groupId\",\n        document.location.href.split(\"/\")[\n          document.location.href.split(\"/\").length - 1\n        ],\n      );\n\n      setImage(formData);\n      // setImage(imageSrc);\n    }\n    // formData.delete(\"file\");\n    // const imageSrc = webcamRef.current.getScreenshot();\n    // // console.log(imageSrc.slice(3));\n    // formData.append(\"file\", imageSrc);\n\n    setImage(formData);\n    // setImage(imageSrc);\n  }, [webcamRef]);\n\n  const webcamOn = () => {\n    setEnableWebcam(true);\n    //intervalCapture();\n  };\n\n  const webcamOff = () => {\n    setEnableWebcam(false);\n    clearInterval(intervalCapture);\n  };\n\n  // useEffect(() => {\n  //   console.log(image[0]);\n  // }, [image]);\n\n  // const manualCapture = () => {\n  //   console.log(\"image manual capture\");\n  //   capture();\n  // };\n\n  // const sendImage = () => {\n  //   // for (var pair of image.entries()) {\n  //   //   console.log(pair[0] + \", \" + pair[1], \"ㅋㅋㅋㅋ\");\n  //   // }\n\n  //   axios\n  //     .post(\"http://localhost:5000/image\", image, {\n  //       header: {\n  //         \"Content-Type\": \"multipart/form-data\",\n  //         Accept: \"multipart/form-data\",\n  //       },\n  //     })\n  //     .then((res) => {\n  //       console.log(res);\n  //     })\n  //     .catch((e) => {\n  //       console.log(e);\n  //     });\n  // };\n\n  // 실제\n  // 처음 : 7초\n  useEffect(() => {\n    let initIntervalCapture;\n    let afterIntervalCapture;\n\n    if (enableWebcam && initFlag) {\n      initIntervalCapture = setInterval(() => {\n        capture();\n        if (image) {\n          console.log(\"image 캡쳐하여 분석서버로 보냈음 - init\");\n          axios\n            .post(\"http://13.125.54.51:5000/image\", image, {\n              header: {\n                \"Content-Type\": \"multipart/form-data\",\n                Accept: \"multipart/form-data\",\n              },\n            })\n            .then((res) => {\n              setInitFlag(false);\n              console.log(\"초기분석결과 : \", res);\n            })\n            .catch((e) => {\n              setInitFlag(false);\n              console.log(e);\n            });\n        }\n      }, 7000);\n    } else {\n      clearInterval(initIntervalCapture);\n    }\n\n    if (enableWebcam && !initFlag) {\n      afterIntervalCapture = setInterval(() => {\n        capture();\n        if (image) {\n          console.log(\"image 캡쳐하여 분석서버로 보냈음 - not init\");\n          axios\n            .post(\"http://13.125.54.51:5000/image\", image, {\n              header: {\n                \"Content-Type\": \"multipart/form-data\",\n                Accept: \"multipart/form-data\",\n              },\n            })\n            .then((res) => {\n              console.log(\"분석서버 -> 프론트 : \", res.data);\n              let tmp = res.data.attendance;\n              let tmp2 = res.data.sleepResult;\n\n              if (!tmp) {\n                console.log(\"자리비움을 시작했습니다.\");\n                setAbsenceFlag(true);\n              } else {\n                setAbsenceFlag(false);\n              }\n\n              if (tmp2) {\n                console.log(\"눈을 감았습니다.\");\n                setDrowFlag(true);\n              } else {\n                setDrowFlag(false);\n              }\n              // 졸기 시작했을 때\n              if (drowFlag) {\n                console.log(\"눈을 감은 시간 : \", drowTime);\n                setDrowTime(drowTime + 1);\n                if (drowTime >= 1) {\n                  // 10초이상 눈 감은 경우\n                  if (drowCount === 0) {\n                    openNotification2(\"bottomRight\");\n                  }\n                  setDrowCount(drowCount + 1);\n                }\n              } else {\n                // 안졸기 시작했을 때\n                setDrowCount(0);\n                setDrowTime(0);\n              }\n              // 결석 시작했을 때\n              if (absenceFlag) {\n                console.log(\"자리 비운 시간 : \", absenceTime);\n                setAbsenceTime(absenceTime + 1);\n                if (absenceTime > 1) {\n                  // 설정한 결석시간에 맞게 바꿔야함\n                  if (absenceCount === 0) {\n                    openNotification(\"bottomRight\");\n                  }\n                  setAbsenceCount(absenceCount + 1);\n                }\n              } else {\n                // 결석 안하기 시작했을 때\n                setAbsenceTime(0);\n              }\n              // 1. 백엔드로 보내야함\n\n              //-> 분석결과 axios로 요청\n              if (res.data && sessionId) {\n                axios\n                  .post(`/api/history/createHistory`, {\n                    sessionId,\n                    userId: me.data.userId,\n                    pitch: parseFloat(res.data.pitch),\n                    yaw: parseFloat(res.data.yaw),\n                    absence: res.data.attendance,\n                  })\n                  .then((res) => {\n                    console.log(\"프론트 -> 백엔드 : \", res);\n                    //console.log(res);\n                  })\n                  .catch((e) => {\n                    console.log(e);\n                  });\n              } else {\n                console.log(\n                  \"아직 수업이 시작되지 않아 백엔드로 데이터 안보내는중\",\n                );\n              }\n            })\n            .catch((e) => {\n              console.log(e);\n              setAbsenceTime(absenceTime + 1);\n              if (absenceTime > 1) {\n                // 설정한 결석시간에 맞게 바꿔야함\n                if (absenceCount === 0) {\n                  openNotification(\"bottomRight\");\n                }\n                setAbsenceCount(absenceCount + 1);\n              }\n            });\n        }\n        // setInitFlag(false);\n      }, 6000);\n    } else {\n      clearInterval(afterIntervalCapture);\n    }\n    return () => {\n      clearInterval(initIntervalCapture);\n      clearInterval(afterIntervalCapture);\n    };\n  }, [\n    enableWebcam,\n    capture,\n    image,\n    initFlag,\n    me,\n    sessionId,\n    drowCount,\n    drowFlag,\n    drowTime,\n    absenceCount,\n    absenceFlag,\n    absenceTime,\n  ]);\n\n  // 수업 시작했는지 체크하는 코드\n  useEffect(() => {\n    let intervalCheckSession;\n    if (enableWebcam) {\n      intervalCheckSession = setInterval(() => {\n        axios\n          .get(\n            `/api/group/checkOnAir/${\n              document.location.href.split(\"/\")[\n                document.location.href.split(\"/\").length - 1\n              ]\n            }`,\n          )\n          .then((res) => {\n            // if (res.data.onAir) {\n            //   console.log(\"수업이 시작되었습니다.\", res.data);\n            // } else {\n            //   console.log(\n            //     \"수업이 아직 시작되지 않았습니다./수업이 끝났습니다.\",\n            //     res.data,\n            //   );\n            // }\n            setIsOnAir(res.data.onAir);\n            setSessionId(res.data.sessionId);\n          });\n      }, 1000);\n    } else {\n      clearInterval(intervalCheckSession);\n    }\n    return () => {\n      clearInterval(intervalCheckSession);\n    };\n  }, [enableWebcam]);\n\n  // 웹캠 켰을 때 데이터 실시간으로 보내기 -> 나중에 capture랑 물려야함\n  // useEffect(() => {\n  //   let intervalThrowData;\n\n  //   if (enableWebcam && isOnAir && sessionId && me) {\n  //     // 나중에 시간 조정해야함\n  //     intervalThrowData = setInterval(() => {\n  //       console.log(\"수업이 시작되어 분석 결과 백엔드로 보내는중..\");\n  //       // console.log({\n  //       //   sessionId,\n  //       //   userId: me.data.userId,\n  //       //   pitch: 2.1,\n  //       //   yaw: -1,\n  //       //   absence: false,\n  //       // });\n  //       axios\n  //         .post(`/api/history/createHistory`, {\n  //           sessionId,\n  //           userId: me.data.userId,\n  //           pitch: faker.datatype.number({ max: 12, min: 0 }),\n  //           yaw: faker.datatype.number({ max: 0, min: -4 }),\n  //           absence: faker.datatype.boolean(),\n  //         })\n  //         .then((res) => {\n  //           //console.log(res);\n  //         })\n  //         .catch((e) => {\n  //           console.log(e);\n  //         });\n  //     }, 2000);\n  //   } else {\n  //     clearInterval(intervalThrowData);\n  //   }\n  //   return () => {\n  //     clearInterval(intervalThrowData);\n  //   };\n  // }, [enableWebcam, isOnAir, sessionId, me]);\n\n  // 임시 방편\n  // useEffect(() => {\n  //   // 게스트 알림 작업해야댐\n  //   let intervalCapture;\n\n  //   if (enableWebcam) {\n  //     intervalCapture = setInterval(() => {\n  // let tmp = faker.datatype.number({\n  //   min: 96,\n  //   max: 100,\n  // });\n  // let tmp2 = true;\n  // console.log(tmp);\n  // console.log(\"absence Time : \", absenceTime);\n  // // if (tmp > 95) {\n\n  // //   openNotification(\"bottomRight\");\n  // // }\n  // if (tmp > 95) {\n  //   setAbsenceFlag(true);\n  // } else {\n  //   setAbsenceFlag(false);\n  // }\n\n  // if (tmp2) {\n  //   setDrowFlag(true);\n  // } else {\n  //   setDrowFlag(false);\n  // }\n  // // 졸기 시작했을 때\n  // if (drowFlag) {\n  //   setDrowTime(drowTime + 1);\n  //   if (drowTime > 10) {\n  //     // 10초이상 눈 감은 경우\n  //     if (drowCount === 0) {\n  //       openNotification2(\"bottomRight\");\n  //     }\n  //     setDrowCount(drowCount + 1);\n  //   }\n  // } else {\n  //   // 안졸기 시작했을 때\n  //   setDrowCount(0);\n  //   setDrowTime(0);\n  // }\n\n  // if (absenceFlag) {\n  //   setAbsenceTime(absenceTime + 1);\n  //   if (absenceTime > 10) {\n  //     if (absenceCount === 0) {\n  //       openNotification(\"bottomRight\");\n  //     }\n  //     setAbsenceCount(absenceCount + 1);\n  //   }\n  // } else {\n  //   setAbsenceTime(0);\n  // }\n  //     }, 1000);\n  //   }\n  //   return () => {\n  //     clearInterval(intervalCapture);\n  //   };\n  // }, [\n  //   enableWebcam,\n  //   absenceTime,\n  //   absenceFlag,\n  //   absenceCount,\n  //   drowCount,\n  //   drowTime,\n  //   drowFlag,\n  // ]);\n\n  return (\n    <Container>\n      <ButtonsWrapper>\n        <Button onClick={webcamOn} type=\"primary\">\n          ON\n        </Button>\n        <Button onClick={webcamOff} type=\"danger\">\n          OFF\n        </Button>\n      </ButtonsWrapper>\n      <GuestWebcamWrapper>\n        {enableWebcam ? (\n          <Webcam\n            audio={false}\n            height={300}\n            width={300}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            videoConstraints={videoConstraints}\n          />\n        ) : (\n          <div\n            style={{\n              width: \"300px\",\n              height: \"300px\",\n              background: \"#000\",\n              color: \"#ddd\",\n              textAlign: \"center\",\n              lineHeight: \"300px\",\n            }}\n          >\n            Please turn on the webcam.\n          </div>\n        )}\n\n        {/* <Button onClick={manualCapture}>Capture</Button>\n        <Button onClick={sendImage}>send Image</Button> */}\n      </GuestWebcamWrapper>\n      <div\n        style={{\n          textAlign: \"center\",\n          fontSize: \"0.75rem\",\n          marginTop: \"15px\",\n          color: \"#bbb\",\n        }}\n      >\n        <span style={{ color: \"red\" }}>*</span> If you click the \"OFF\" during\n        class, it is recognized as \"absence\".\n      </div>\n    </Container>\n  );\n};\n\nexport default GuestWebcam;\n","export default __webpack_public_path__ + \"static/media/park1.35235470.jpeg\";","export default __webpack_public_path__ + \"static/media/park2.1a395df7.jpeg\";","export default __webpack_public_path__ + \"static/media/park3.f458d366.jpeg\";","export default __webpack_public_path__ + \"static/media/kim1.be4dbaf8.jpeg\";","export default __webpack_public_path__ + \"static/media/kim2.1bac2435.jpeg\";","export default __webpack_public_path__ + \"static/media/kim3.ce996886.jpeg\";","export default __webpack_public_path__ + \"static/media/han1.cd80156c.jpeg\";","export default __webpack_public_path__ + \"static/media/han2.6a149f73.jpeg\";","export default __webpack_public_path__ + \"static/media/han3.eff4170b.jpeg\";","export default __webpack_public_path__ + \"static/media/yang1.708b857b.jpeg\";","export default __webpack_public_path__ + \"static/media/yang2.f7b931bd.jpeg\";","export default __webpack_public_path__ + \"static/media/yang3.afdae8f8.jpeg\";","import { combineReducers } from \"redux\";\nimport post from \"./post\";\nimport user from \"./user\";\n\nconst rootReducer = combineReducers({\n  post,\n  user,\n});\n\nexport default rootReducer;\n","import axios from \"axios\";\nimport { BACK_URL } from \"../constant/constant\";\n\naxios.defaults.baseURL = `${BACK_URL}`;\n// axios.defaults.withCredentials = true;\n\nconst client = axios.create();\n\nexport default client;\n","import client from \"./client\";\n\nexport const loadPost = (id) => client.get(\"\");\n\nexport const loadGroupList = (id) => client.get(`/api/main/getGroupList/${id}`);\n\nexport const loadWaitingList = (id) =>\n  client.get(`/api/main/getWaitingList/${id}`);\n\n// axios 로 대체\nexport const joinGroup = (id) => client.post(`/api/group/joinGroup/${id}`);\n\nexport const loadGroupInfo = ({ id, groupId, userId }) =>\n  client.post(`/api/group/getGroupInfo`, { groupId, userId });\n\nexport const allowMember = ({ userEmail, groupId }) =>\n  client.post(`/api/group/allowMember/${groupId}`, { email: userEmail });\n\nexport const rejectMember = ({ userEmail, groupId }) =>\n  client.post(`/api/group/rejectMember/${groupId}`, { email: userEmail });\n\nexport const loadHistoryList = (userId) =>\n  client.get(`/api/history/getHistory?userId=${userId}`);\n\nexport const loadGuestRecentTrends = (userId) =>\n  client.get(`/api/main/getGuestRecentTrends/${userId}`);\n\nexport const loadHostRecentTrends = (userId) =>\n  client.get(`/api/main/getHostRecentTrends/${userId}`);\n\nexport const exitGroup = (groupId, userId) =>\n  client.patch(`/api/group/exitGroup/${groupId}`, { userId });\n\nexport const loadIntervalGroupList = (userId) =>\n  client.get(`/api/main/getGroupList/${userId}`);\n\nexport const loadIntervalWaitingList = (groupId) =>\n  client.get(`/api/main/getWaitingList/${groupId}`);\n\nexport const loadWaitingMember = (groupId) =>\n  client.get(`/api/group/getWaitingList/${groupId}`);\n","import {\n  takeLatest,\n  call,\n  put,\n  throttle,\n  takeEvery,\n  delay,\n} from \"redux-saga/effects\";\nimport {\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  LOAD_POST_REQUEST,\n  LOAD_GROUP_LIST_SUCCESS,\n  LOAD_GROUP_LIST_FAILURE,\n  LOAD_GROUP_LIST_REQUEST,\n  LOAD_WAITING_LIST_SUCCESS,\n  LOAD_WAITING_LIST_FAILURE,\n  LOAD_WAITING_LIST_REQUEST,\n  LOAD_GUEST_RECENT_TRENDS_SUCCESS,\n  LOAD_GUEST_RECENT_TRENDS_FAILURE,\n  LOAD_HOST_RECENT_TRENDS_SUCCESS,\n  LOAD_HOST_RECENT_TRENDS_FAILURE,\n  LOAD_GUEST_RECENT_TRENDS_REQUEST,\n  LOAD_HOST_RECENT_TRENDS_REQUEST,\n  LOAD_HISTORY_LIST_SUCCESS,\n  LOAD_HISTORY_LIST_FAILURE,\n  LOAD_HISTORY_LIST_REQEUST,\n  ALLOW_MEMBER_SUCCESS,\n  ALLOW_MEMBER_FAILURE,\n  REJECT_MEMBER_SUCCESS,\n  REJECT_MEMBER_FAILURE,\n  ALLOW_MEMBER_REQUEST,\n  REJECT_MEMBER_REQUEST,\n  LOAD_INTERVAL_GROUPLIST,\n  LOAD_INTERVAL_WAITINGLIST,\n  LOAD_INTERVAL_GROUPLIST_SUCCESS,\n  LOAD_INTERVAL_WAITINGLIST_SUCCESS,\n  LOAD_WAITING_MEMBER,\n  LOAD_WAITING_MEMBER_SUCCESS,\n} from \"../reducers/post\";\nimport {\n  hostGroupData,\n  guestGroupData,\n  groupList,\n  waitingList,\n  createGuestRecentTrends,\n  createHostRecentTrends,\n  createHistoryList,\n} from \"../libs/util/dummyCreator\";\nimport {\n  loadGroupList,\n  loadWaitingList,\n  loadGroupInfo,\n  allowMember,\n  rejectMember,\n  loadHistoryList,\n  loadGuestRecentTrends,\n  loadHostRecentTrends,\n  loadIntervalGroupList,\n  loadIntervalWaitingList,\n  loadWaitingMember,\n} from \"../libs/api/post\";\nimport axios from \"axios\";\n\n// saga\n\nfunction* loadPostSaga(action) {\n  // action.payload -> url 파라미터 뜻함\n\n  try {\n    //const dummyPost = hostGroupData(10, 5); -> 데모때 필요\n    // const dummyPost2 = guestGroupData();\n    const res = yield call(loadGroupInfo, action.payload);\n\n    yield put({ type: LOAD_POST_SUCCESS, groupDetail: res });\n  } catch (error) {\n    yield put({ type: LOAD_POST_FAILURE });\n  }\n}\n\nfunction* loadGroupListSaga(action) {\n  try {\n    //const dummyPost = groupList(15);\n    const res = yield call(loadGroupList, action.payload);\n\n    yield put({ type: LOAD_GROUP_LIST_SUCCESS, groupList: res });\n  } catch (error) {\n    yield put({ type: LOAD_GROUP_LIST_FAILURE });\n  }\n}\n\nfunction* loadWaitingListSaga(action) {\n  try {\n    //const dummyPost = waitingList(10);\n    const res = yield call(loadWaitingList, action.payload);\n\n    yield put({ type: LOAD_WAITING_LIST_SUCCESS, waitingList: res });\n  } catch (error) {\n    yield put({ type: LOAD_WAITING_LIST_FAILURE });\n  }\n}\n\nfunction* loadGuestRecentTrendsSaga(action) {\n  try {\n    const dummyPost = createGuestRecentTrends();\n    const res = yield call(loadGuestRecentTrends, action.payload);\n    yield delay(100);\n    yield put({\n      type: LOAD_GUEST_RECENT_TRENDS_SUCCESS,\n      guestRecentTrends: res.data,\n    });\n  } catch (error) {\n    yield put({ type: LOAD_GUEST_RECENT_TRENDS_FAILURE });\n  }\n}\n\nfunction* loadHostRecentTrendsSaga(action) {\n  try {\n    const dummyPost = createHostRecentTrends();\n    const res = yield call(loadHostRecentTrends, action.payload);\n    yield delay(100);\n    yield put({\n      type: LOAD_HOST_RECENT_TRENDS_SUCCESS,\n      hostRecentTrends: res.data,\n    });\n  } catch (error) {\n    yield put({ type: LOAD_HOST_RECENT_TRENDS_FAILURE });\n  }\n}\n\nfunction* loadHistoryListSaga(action) {\n  try {\n    const dummyPost = createHistoryList();\n\n    // yield delay(100);\n    const res = yield call(loadHistoryList, action.payload);\n\n    yield put({\n      type: LOAD_HISTORY_LIST_SUCCESS,\n      historyList: res.data,\n    });\n  } catch (error) {\n    yield put({ type: LOAD_HISTORY_LIST_FAILURE });\n  }\n}\n\nfunction* allowMemberSaga(action) {\n  try {\n    // const dummyPost = createHistoryList();\n    // console.log(action.payload);\n    const res = yield call(allowMember, action.payload);\n\n    // axios 요청 해야겠ㄷ네 다시\n\n    yield put({\n      type: ALLOW_MEMBER_SUCCESS,\n      //groupDetail: res,\n    });\n  } catch (error) {\n    yield put({ type: ALLOW_MEMBER_FAILURE });\n  }\n}\n\nfunction* rejectMemberSaga(action) {\n  try {\n    // const dummyPost = createHistoryList();\n    const res = yield call(rejectMember, action.payload);\n\n    yield put({\n      type: REJECT_MEMBER_SUCCESS,\n      //groupDetail: res,\n    });\n  } catch (error) {\n    yield put({ type: REJECT_MEMBER_FAILURE });\n  }\n}\n\nfunction* loadIntervalGroupListSaga(action) {\n  try {\n    const res = yield call(loadIntervalGroupList, action.payload);\n    yield put({ type: LOAD_INTERVAL_GROUPLIST_SUCCESS, res: res.data });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* loadIntervalWaitingListSaga(action) {\n  try {\n    const res = yield call(loadIntervalWaitingList, action.payload);\n    yield put({ type: LOAD_INTERVAL_WAITINGLIST_SUCCESS, res: res.data });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* loadWaitingMemberSaga(action) {\n  try {\n    const res = yield call(loadWaitingMember, action.payload);\n\n    yield put({ type: LOAD_WAITING_MEMBER_SUCCESS, res: res.data });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watchPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPostSaga);\n  yield takeLatest(LOAD_GROUP_LIST_REQUEST, loadGroupListSaga);\n  yield takeLatest(LOAD_WAITING_LIST_REQUEST, loadWaitingListSaga);\n  yield takeLatest(LOAD_GUEST_RECENT_TRENDS_REQUEST, loadGuestRecentTrendsSaga);\n  yield takeLatest(LOAD_HOST_RECENT_TRENDS_REQUEST, loadHostRecentTrendsSaga);\n  yield takeLatest(LOAD_HISTORY_LIST_REQEUST, loadHistoryListSaga);\n  yield takeLatest(ALLOW_MEMBER_REQUEST, allowMemberSaga);\n  yield takeLatest(REJECT_MEMBER_REQUEST, rejectMemberSaga);\n  yield takeLatest(LOAD_INTERVAL_GROUPLIST, loadIntervalGroupListSaga);\n  yield takeLatest(LOAD_INTERVAL_WAITINGLIST, loadIntervalWaitingListSaga);\n  yield takeLatest(LOAD_WAITING_MEMBER, loadWaitingMemberSaga);\n}\n","import shortId from \"shortid\";\nimport faker from \"faker\";\n\nexport const createUser = () => {\n  return {\n    name: faker.name.findName(),\n    profileImage: faker.image.image(),\n    email: faker.internet.email(),\n    token: faker.random.word(),\n    id: shortId.generate(),\n  };\n};\n\nexport const hostGroupData = (groupMemberNum, waitingMemberNum) => {\n  return {\n    role: \"host\",\n    hostName: faker.name.findName(),\n    groupCode: shortId.generate(),\n    groupName: faker.lorem.word(),\n    absenceTime: faker.random.number(),\n    alertDuration: faker.random.number(),\n    // groupMember: new Array(groupMemberNum).fill().map((v, i) => ({\n    //   name: faker.name.findName(),\n    //   email: faker.internet.email(),\n    // })),\n    groupMember: [\n      { name: \"박진호\", email: \"gogod23@ajou.ac.kr\" },\n      { name: \"양세영\", email: \"whfh1359@ajou.ac.kr\" },\n      { name: \"한창희\", email: \"chang233@ajou.ac.kr\" },\n      { name: \"김지훈\", email: \"alahoon1@ajou.ac.kr\" },\n    ],\n    waitingMember: new Array(waitingMemberNum).fill().map((v, i) => ({\n      name: faker.name.findName(),\n      email: faker.internet.email(),\n    })),\n  };\n};\n\nexport const guestGroupData = () => {\n  return {\n    role: \"guest\",\n    hostName: faker.name.findName(),\n    groupCode: shortId.generate(),\n    groupName: faker.lorem.word(),\n    absenceTime: faker.datatype.number(),\n    alertDuration: faker.datatype.number(),\n  };\n};\n\nexport const groupList = (number) => {\n  return Array(number)\n    .fill()\n    .map((v, i) => ({\n      id: shortId.generate(),\n      groupName: faker.random.word(),\n      groupCode: faker.datatype.number(),\n      status: i % 2 === 0 ? true : false,\n      role: i % 2 === 0 ? \"HOST\" : \"GUEST\",\n    }));\n};\n\nexport const waitingList = (number) => {\n  return Array(number)\n    .fill()\n    .map((v, i) => ({\n      groupName: faker.random.word(),\n      groupCode: faker.datatype.number(),\n      status: \"wait\",\n    }));\n};\n\nexport const createHostRecentTrends = () => {\n  return {\n    role: \"host\",\n    attendanceRate: faker.datatype.number({\n      min: 1,\n      max: 100,\n    }),\n    concentrationRate: faker.datatype.number({\n      min: 1,\n      max: 100,\n    }),\n    drowsinessRate: faker.datatype.number({\n      min: 1,\n      max: 100,\n    }),\n  };\n};\n\nexport const createGuestRecentTrends = () => {\n  return {\n    role: \"guest\",\n    attendanceRate: faker.datatype.number({\n      min: 1,\n      max: 100,\n    }),\n    concentrationRate: faker.datatype.number({\n      min: 1,\n      max: 100,\n    }),\n    drowsinessRate: faker.datatype.number({\n      min: 1,\n      max: 100,\n    }),\n  };\n};\n\nexport const createHistoryList = () => {\n  return new Array(20).fill().map((v, i) => ({\n    // list\n    role: i % 2 === 0 ? \"guest\" : \"host\",\n    historyId: shortId.generate(),\n    groupName: faker.lorem.word(),\n    createdAt: faker.date.past(2),\n    attendanceCount: faker.datatype.number({\n      min: 1,\n      max: 100,\n    }),\n    vibe: faker.datatype.number({\n      min: 1,\n      max: 100,\n    }),\n    // list item - guest\n    isAttend: faker.datatype.boolean(),\n    timeLineLog: new Array(10).fill().map((v, i) => ({\n      state: \"absence\",\n      startHour: faker.datatype.number({\n        min: 1,\n        max: 10,\n      }),\n      startMinute: faker.datatype.number({\n        min: 0,\n        max: 59,\n      }),\n      startSeconds: faker.datatype.number({\n        min: 0,\n        max: 59,\n      }),\n      endHour: faker.datatype.number({\n        min: 1,\n        max: 10,\n      }),\n      endMinute: faker.datatype.number({\n        min: 0,\n        max: 59,\n      }),\n      endSeconds: faker.datatype.number({\n        min: 0,\n        max: 59,\n      }),\n    })),\n    roll: {\n      left: faker.datatype.number({\n        min: 1,\n        max: 100,\n      }),\n      normal: faker.datatype.number({\n        min: 1,\n        max: 100,\n      }),\n      right: faker.datatype.number({\n        min: 1,\n        max: 100,\n      }),\n    },\n    yaw: {\n      left: faker.datatype.number({\n        min: 1,\n        max: 100,\n      }),\n      normal: faker.datatype.number({\n        min: 1,\n        max: 100,\n      }),\n      right: faker.datatype.number({\n        min: 1,\n        max: 100,\n      }),\n    },\n    // list item - host\n\n    groupMember: new Array(30).fill().map((v, i) => ({\n      name: faker.name.findName(),\n      email: faker.internet.email(),\n      attitude: faker.datatype.number({\n        min: 1,\n        max: 3,\n      }),\n      absenceTime: faker.datatype.number({\n        min: 1,\n        max: 60,\n      }),\n      isAttend: faker.datatype.boolean(),\n    })),\n  }));\n};\n\n// deprecated\nexport const createGuestHistoryDetail = () => {\n  return {};\n};\n\n// deprecated\nexport const createHostHistoryDetail = () => {\n  return {};\n};\n","import client from \"./client\";\n\nexport const setUser = () => client.get(\"\");\n\nexport const login = ({ email, password }) =>\n  client.post(`/api/auth/login`, { email, password });\n\nexport const register = () => client.post(`/api/auth/register`);\n\nexport const logout = () => client.get(`/api/auth/logout`);\n","import { takeLatest, call, put, delay, throttle } from \"redux-saga/effects\";\nimport {\n  SET_USER_REQUEST,\n  LOG_IN_REQUEST,\n  LOG_OUT_REQUEST,\n  REGISTER_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  SET_USER_SUCCESS,\n  SET_USER_FAILURE,\n} from \"../reducers/user\";\nimport { createUser } from \"../libs/util/dummyCreator\";\nimport { login } from \"../libs/api/user\";\n\n// saga\n\nfunction* setUserSaga() {\n  try {\n    yield put({\n      type: SET_USER_SUCCESS,\n      me: JSON.parse(localStorage.getItem(\"user\")),\n    });\n  } catch (error) {\n    yield put({ type: SET_USER_FAILURE });\n  }\n}\n\nfunction* loginSaga(action) {\n  try {\n    const res = yield call(login, action.payload);\n\n    const user = localStorage.getItem(\"user\");\n    if (!user) {\n      localStorage.setItem(\"user\", JSON.stringify(res));\n    } else {\n      localStorage.removeItem(\"user\");\n      localStorage.setItem(\"user\", JSON.stringify(res));\n    }\n    yield put({ type: LOG_IN_SUCCESS, me: res });\n  } catch (error) {\n    yield put({ type: LOG_IN_FAILURE });\n  }\n}\n\nfunction* logoutSaga(action) {\n  // try {\n  //   yield call(logout);\n  //   yield put({ type: LOG_OUT_SUCCESS });\n  //   window.location.href = `/`;\n  // } catch (error) {\n  //   console.log(error);\n  //   yield put({ type: LOG_OUT_FAILURE });\n  // }\n}\n\nfunction* registerSaga(action) {\n  // try {\n  //   yield call(register, action.data);\n  //   yield put({ type: REGISTER_SUCCESS });\n  // } catch (error) {\n  //   yield put({ type: REGISTER_FAILURE });\n  // }\n}\n\n// watcher\n\nexport function* watchUser() {\n  yield takeLatest(SET_USER_REQUEST, setUserSaga);\n  yield takeLatest(LOG_IN_REQUEST, loginSaga);\n  yield takeLatest(LOG_OUT_REQUEST, logoutSaga);\n  yield takeLatest(REGISTER_REQUEST, registerSaga);\n}\n","import { all, fork } from \"redux-saga/effects\";\nimport { watchPost } from \"./post\";\nimport { watchUser } from \"./user\";\n\nfunction* rootSaga() {\n  yield all([fork(watchPost), fork(watchUser)]);\n}\n\nexport default rootSaga;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\nimport { setUserRequestAction } from \"./reducers/user\";\nimport Landing from \"./pages/Landing\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nfunction loadUser() {\n  console.log(\"load user\");\n  try {\n    store.dispatch(setUserRequestAction());\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nsagaMiddleware.run(rootSaga);\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={window.location.pathname || \"\"}>\n      <Route exact path=\"/\" component={Landing} />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}